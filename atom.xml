<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>飞翔的猫</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-05T08:47:04.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wxping715</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Build_HTTP/HTTPS_Proxy</title>
    <link href="http://yoursite.com/2016/10/05/Build-HTTP-HTTPS-Proxy/"/>
    <id>http://yoursite.com/2016/10/05/Build-HTTP-HTTPS-Proxy/</id>
    <published>2016-10-05T08:41:10.000Z</published>
    <updated>2016-10-05T08:47:04.000Z</updated>
    
    <content type="html">&lt;p&gt;本文尝试通过&lt;code&gt;node.js&lt;/code&gt;搭建HTTP/HTTPS代理。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;var http = require(&amp;apos;http&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var net = require(&amp;apos;net&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;var url = require(&amp;apos;url&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;// console.log(&amp;quot;start server&amp;quot;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;function request(cReq, cRes) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    var u = url.parse(cReq.url);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    var options = &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        hostname : u.hostname,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        port     : u.port || 80,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        path     : u.path,       &lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        method     : cReq.method,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        headers     : cReq.headers&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    var pReq = http.request(options, function(pRes) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        cRes.writeHead(pRes.statusCode, pRes.headers);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pRes.pipe(cRes);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;).on(&amp;apos;error&amp;apos;, function(e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        cRes.end();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    cReq.pipe(pReq);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;function connect(cReq, cSock) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    var u = url.parse(&amp;apos;http://&amp;apos; + cReq.url);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    var pSock = net.connect(u.port, u.hostname, function() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        cSock.write(&amp;apos;HTTP/1.1 200 Connection Established\r\n\r\n&amp;apos;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        pSock.pipe(cSock);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;).on(&amp;apos;error&amp;apos;, function(e) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        cSock.end();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    cSock.pipe(pSock);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;http.createServer()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .on(&amp;apos;request&amp;apos;, request)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .on(&amp;apos;connect&amp;apos;, connect)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    .listen(8888, &amp;apos;0.0.0.0&amp;apos;);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://imququ.com/post/web-proxy.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;HTTP 代理原理及实现（一）&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文尝试通过&lt;code&gt;node.js&lt;/code&gt;搭建HTTP/HTTPS代理。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="proxy" scheme="http://yoursite.com/tags/proxy/"/>
    
      <category term="node.js" scheme="http://yoursite.com/tags/node-js/"/>
    
  </entry>
  
  <entry>
    <title>Mac多版本Numpy引入问题</title>
    <link href="http://yoursite.com/2016/09/26/Mac%E5%A4%9A%E7%89%88%E6%9C%ACNumpy%E5%BC%95%E5%85%A5%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2016/09/26/Mac多版本Numpy引入问题/</id>
    <published>2016-09-26T06:45:30.000Z</published>
    <updated>2016-09-26T08:16:24.000Z</updated>
    
    <content type="html">&lt;p&gt;Mac电脑系统本身会维护一个&lt;code&gt;numpy&lt;/code&gt;版本，安装新&lt;code&gt;numpy&lt;/code&gt;版本之后的导入会因此带来问题。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h3&gt;&lt;p&gt;我目前使用的MBP版本是&lt;code&gt;OS X EI Capitan (10.11.6)&lt;/code&gt;，在终端使用的系统默认安装的&lt;code&gt;python 2.7&lt;/code&gt;, 如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[talus@talusMac ~]$ &lt;span class=&quot;built_in&quot;&gt;which&lt;/span&gt; python&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/usr/bin/python&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;该版本的&lt;code&gt;Mac&lt;/code&gt;自己维护了一个版本的&lt;code&gt;numpy&lt;/code&gt;，版本为&lt;code&gt;1.8.0rc1&lt;/code&gt;, 在&lt;code&gt;python&lt;/code&gt;中导入之后显示如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;[talus@talusMac python]$ python&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Python 2.7.10 (default, Oct 23 2015, 19:19:21)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;[GCC 4.2.1 Compatible Apple LLVM 7.0.0 (clang-700.0.59.5)] on darwin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Type &amp;quot;help&amp;quot;, &amp;quot;copyright&amp;quot;, &amp;quot;credits&amp;quot; or &amp;quot;license&amp;quot; for more information.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import numpy&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; numpy.__version__&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;apos;1.8.0rc1&amp;apos;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;numpy 1.8&lt;/code&gt;的版本比较老，需要手动升级更新一下。使用&lt;code&gt;pip install numpy==1.11.0&lt;/code&gt;安装新版本的&lt;code&gt;numpy&lt;/code&gt;之后，导入&lt;code&gt;numpy&lt;/code&gt;显示的仍然是&lt;code&gt;1.8.0rc1&lt;/code&gt;的版本，并未加载新的版本。&lt;/p&gt;
&lt;h3 id=&quot;问题原因&quot;&gt;&lt;a href=&quot;#问题原因&quot; class=&quot;headerlink&quot; title=&quot;问题原因&quot;&gt;&lt;/a&gt;问题原因&lt;/h3&gt;&lt;p&gt;首先查看当前&lt;code&gt;python&lt;/code&gt;的&lt;code&gt;sys.path&lt;/code&gt;选项, 如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; import sys&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; print &amp;quot;\n&amp;quot;.join(sys.path)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus/Projects/db_oj/common/lib&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus/Projects/db_oj/frontend&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python27.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-darwin&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/plat-mac/lib-scriptpackages&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-tk&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-old&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/lib-dynload&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/PyObjC&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Library/Python/2.7/site-packages&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Library/Python/2.7/site-packages/PIL&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus/.pip/repository&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;/Users/talus/Projects/db_oj/common/lib&lt;/code&gt;和&lt;code&gt;/Users/talus/Projects/db_oj/frontend&lt;/code&gt;是自行在&lt;code&gt;PYTHONPATH&lt;/code&gt;环境变量中添加的；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Users/talus&lt;/code&gt;是当前目录；&lt;/li&gt;
&lt;li&gt;中间&lt;code&gt;System&lt;/code&gt;目录下的&lt;code&gt;package&lt;/code&gt;都是系统默认维护的&lt;code&gt;package&lt;/code&gt;列表；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Library/Python/2.7/site-packages&lt;/code&gt;是&lt;code&gt;easy_install&lt;/code&gt;维护的列表；&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/Users/talus/.pip/repository&lt;/code&gt;是自定义的&lt;code&gt;pip&lt;/code&gt;库位置， 刚安装的&lt;code&gt;numpy==1.11.0&lt;/code&gt;版本就安装在该目录中。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可以看出， Mac系统默认维护的库位置为&lt;code&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python&lt;/code&gt;, 如果进入目录可以看到有默认安装的&lt;code&gt;numpy&lt;/code&gt;, &lt;code&gt;matplotlib&lt;/code&gt;等。&lt;br&gt;使用&lt;code&gt;easy_install&lt;/code&gt;或者&lt;code&gt;pip&lt;/code&gt;默认会将packet安装在&lt;code&gt;/Library/Python/2.7/site-packages&lt;/code&gt;, 但在更改之后的&lt;code&gt;pip&lt;/code&gt;路径为&lt;code&gt;/Users/talus/.pip/repository&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;问题的原因就在于&lt;code&gt;python&lt;/code&gt;搜索&lt;code&gt;numpy&lt;/code&gt;时，Mac默认的库位置早于&lt;code&gt;pip&lt;/code&gt;库设定的位置，从而会加载默认版本的&lt;code&gt;numpy&lt;/code&gt;，即&lt;code&gt;1.8.0rc1&lt;/code&gt;版本的。&lt;/p&gt;
&lt;h3 id=&quot;解决办法&quot;&gt;&lt;a href=&quot;#解决办法&quot; class=&quot;headerlink&quot; title=&quot;解决办法&quot;&gt;&lt;/a&gt;解决办法&lt;/h3&gt;&lt;p&gt;根据之前的分析，解决该问题的思路就是将&lt;code&gt;repository&lt;/code&gt;的加载顺序提升到&lt;code&gt;Extras/lib/python&lt;/code&gt;之前。&lt;/p&gt;
&lt;p&gt;在&lt;code&gt;/Library/Python/2.7/site-packages&lt;/code&gt;目录下有默认的&lt;code&gt;easy_install.pth&lt;/code&gt;文件，该文件指定了&lt;code&gt;python&lt;/code&gt;启动时库的加载顺序。&lt;br&gt;默认代码如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import sys; sys.__plen = len(sys.path)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./numpy-1.11.0-py2.7-macosx-10.11-intel.egg&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import sys; new=sys.path[sys.__plen:]; del sys.path[sys.__plen:]; p=getattr(sys,&amp;apos;__egginsert&amp;apos;,0); sys.path[p:p]=new;  sys.__egginsert = p+len(new)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;只需要将自定义的库文件位置&lt;code&gt;repository&lt;/code&gt;添加到加载其他库文件之前即可，添加完的文件如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import sys; sys.__plen = len(sys.path)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./numpy-1.11.0-py2.7-macosx-10.11-intel.egg&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus/.pip/repository&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import sys; new=sys.path[sys.__plen:]; del sys.path[sys.__plen:]; p=getattr(sys,&amp;apos;__egginsert&amp;apos;,0); sys.path[p:p]=new;  sys.__egginsert = p+len(new)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;之后开启新的终端执行显示&lt;code&gt;sys.path&lt;/code&gt;之后可以看到已经将&lt;code&gt;/Users/talus/.pip/repository&lt;/code&gt;放置在其他路径之前。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus/.pip/repository&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus/Projects/db_oj/common/lib&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus/Projects/db_oj/frontend&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python27.zip&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;......&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;从终端执行&lt;code&gt;import numpy&lt;/code&gt;之后，也发现加载了新安装的&lt;code&gt;numpy&lt;/code&gt;版本。&lt;/p&gt;
&lt;h4 id=&quot;未设置pip默认目录的解决办法&quot;&gt;&lt;a href=&quot;#未设置pip默认目录的解决办法&quot; class=&quot;headerlink&quot; title=&quot;未设置pip默认目录的解决办法&quot;&gt;&lt;/a&gt;未设置pip默认目录的解决办法&lt;/h4&gt;&lt;p&gt;未设置&lt;code&gt;pip&lt;/code&gt;默认目录时，安装的&lt;code&gt;numpy&lt;/code&gt;会被安装到&lt;code&gt;/Library/Python/2.7/site-packages&lt;/code&gt;。 此时只需要在&lt;code&gt;easy_install.pth&lt;/code&gt;中将当前的&lt;code&gt;numpy&lt;/code&gt;egg路径添加到加载系统文件之前即可。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;import sys; sys.__plen = len(sys.path)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;/Users/talus/.pip/repository&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./simplejson-3.8.2-py2.7-macosx-10.11-intel.egg&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;./numpy-1.11.1-py2.7-macosx-10.11-intel.egg&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;import sys; new=sys.path[sys.__plen:]; del sys.path[sys.__plen:]; p=getattr(sys,&amp;apos;__egginsert&amp;apos;,0); sys.path[p:p]=new;  sys.__egginsert = p+len(new)&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果使用&lt;code&gt;easy_install&lt;/code&gt;安装&lt;code&gt;numpy&lt;/code&gt;，不需要手动添加该条路径，默认会添加该条路径。&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/18025510/multiple-numpy-version-on-mac-os-x&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;multiple numpy version on Mac OS X&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Mac电脑系统本身会维护一个&lt;code&gt;numpy&lt;/code&gt;版本，安装新&lt;code&gt;numpy&lt;/code&gt;版本之后的导入会因此带来问题。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
      <category term="numpy" scheme="http://yoursite.com/tags/numpy/"/>
    
  </entry>
  
  <entry>
    <title>npm配置文件</title>
    <link href="http://yoursite.com/2016/09/25/npm%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2016/09/25/npm配置文件/</id>
    <published>2016-09-24T17:39:36.000Z</published>
    <updated>2016-09-26T09:41:53.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;npm&lt;/code&gt;是&lt;code&gt;node.js&lt;/code&gt;下默认的包管理器, &lt;code&gt;npm&lt;/code&gt;的配置也是基于文件设置的。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;安装nmp&quot;&gt;&lt;a href=&quot;#安装nmp&quot; class=&quot;headerlink&quot; title=&quot;安装nmp&quot;&gt;&lt;/a&gt;安装nmp&lt;/h3&gt;&lt;p&gt;依照官方教程&lt;a href=&quot;https://docs.npmjs.com/getting-started/installing-node&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;installing-node&lt;/a&gt;即可。&lt;/p&gt;
&lt;h3 id=&quot;npm配置&quot;&gt;&lt;a href=&quot;#npm配置&quot; class=&quot;headerlink&quot; title=&quot;npm配置&quot;&gt;&lt;/a&gt;npm配置&lt;/h3&gt;&lt;p&gt;&lt;code&gt;npm&lt;/code&gt;配置采用&lt;code&gt;命令行+文件&lt;/code&gt;的配置方式。&lt;/p&gt;
&lt;h4 id=&quot;命令行&quot;&gt;&lt;a href=&quot;#命令行&quot; class=&quot;headerlink&quot; title=&quot;命令行&quot;&gt;&lt;/a&gt;命令行&lt;/h4&gt;&lt;p&gt;&lt;code&gt;npm&lt;/code&gt;的配置命令为&lt;code&gt;npm config [set/get] [key]&lt;/code&gt;, 其中&lt;code&gt;get&lt;/code&gt;是获取当前配置信息，&lt;code&gt;set&lt;/code&gt;是设置当前配置， &lt;code&gt;key&lt;/code&gt;为配置项的名字。&lt;/p&gt;
&lt;p&gt;如查看使用如下的命令返回当前的npm源地址&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm config get registry&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用如下的命令设置新的npm源地址&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;npm config set registry https://registry.npm.taobao.org/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其他配置命令&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;npm config list&lt;/code&gt;: 显示当前所有的配置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm config edit&lt;/code&gt;：编辑全局配置&lt;/li&gt;
&lt;li&gt;&lt;code&gt;npm config delete key&lt;/code&gt;: 编辑key对应的配置项&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;文件配置方式&quot;&gt;&lt;a href=&quot;#文件配置方式&quot; class=&quot;headerlink&quot; title=&quot;文件配置方式&quot;&gt;&lt;/a&gt;文件配置方式&lt;/h4&gt;&lt;p&gt;&lt;code&gt;npm&lt;/code&gt;默认会读取当前用户&lt;code&gt;home&lt;/code&gt;目录下的&lt;code&gt;.npmrc&lt;/code&gt;文件作为用户自定义的设置信息，如果试验一下使用命令行更改设置的命令，那么也会发现在&lt;code&gt;.npmrc&lt;/code&gt;中会相应地做出变化。&lt;br&gt;&lt;code&gt;.npmrc&lt;/code&gt;文件的格式为&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;key=value&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;key&lt;/code&gt;为配置项名称，&lt;code&gt;value&lt;/code&gt;为配置项内容，如配置源为国内的淘宝源，文件中的内容为:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;registry=https://registry.npm.taobao.org/&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;因此，自定义&lt;code&gt;npm&lt;/code&gt;的相关配置可以采用&lt;code&gt;npm config&lt;/code&gt;的方式, 或者直接在&lt;code&gt;.npmrc&lt;/code&gt;文件中添加相应的内容即可。&lt;/p&gt;
&lt;h3 id=&quot;常见的配置&quot;&gt;&lt;a href=&quot;#常见的配置&quot; class=&quot;headerlink&quot; title=&quot;常见的配置&quot;&gt;&lt;/a&gt;常见的配置&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;npm&lt;/code&gt;是&lt;code&gt;node.js&lt;/code&gt;下默认的包管理器, &lt;code&gt;npm&lt;/code&gt;的配置也是基于文件设置的。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Node.js" scheme="http://yoursite.com/tags/Node-js/"/>
    
      <category term="npm" scheme="http://yoursite.com/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>Java多线程编程-线程基本操作</title>
    <link href="http://yoursite.com/2016/06/28/Java%E5%A4%9A%E7%BA%BF%E7%A8%8B%E7%BC%96%E7%A8%8B-%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B/"/>
    <id>http://yoursite.com/2016/06/28/Java多线程编程-创建线程/</id>
    <published>2016-06-28T12:25:05.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;从本节开始，将通过一系列的文章博客介绍Java并发编程的相关内容。此处为第一篇，介绍Java多线程中线程的基本管理，包括线程创建，sleep以及中断等。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;线程&quot;&gt;&lt;a href=&quot;#线程&quot; class=&quot;headerlink&quot; title=&quot;线程&quot;&gt;&lt;/a&gt;线程&lt;/h3&gt;&lt;p&gt;&lt;code&gt;Java&lt;/code&gt;语言中采用的单线程模型，也就是在程序中不手动唤起新的线程时，默认就采用单个线程运行任务。需要注意的是，虽然只是采用单线程运行任务，但并不代表只启动一个线程，比如还会有线程负责垃圾回收等。&lt;br&gt;在执行&lt;code&gt;Java&lt;/code&gt;命令时，操作系统默认会启动一个&lt;code&gt;JVM&lt;/code&gt;进程，进程会同时创建几个线程，其中的主线程负责任务运行。&lt;/p&gt;
&lt;p&gt;线程共有如下的6种状态:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;New(新创建)&lt;/li&gt;
&lt;li&gt;Runnable(可运行的)&lt;/li&gt;
&lt;li&gt;Blocked (被阻塞的)&lt;/li&gt;
&lt;li&gt;Waiting (等待中的)&lt;/li&gt;
&lt;li&gt;Timed Waiting (计时等待的)&lt;/li&gt;
&lt;li&gt;Terminated (终止的)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;各个状态之间的线程转移和切换方式如下图。&lt;br&gt;&lt;img src=&quot;/2016/06/28/Java多线程编程-创建线程/thread-state-diagram.png&quot; alt=&quot;Thread State Diagram&quot; title=&quot;Thread State Diagram&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;定义与创建线程&quot;&gt;&lt;a href=&quot;#定义与创建线程&quot; class=&quot;headerlink&quot; title=&quot;定义与创建线程&quot;&gt;&lt;/a&gt;定义与创建线程&lt;/h3&gt;&lt;h4 id=&quot;定义线程&quot;&gt;&lt;a href=&quot;#定义线程&quot; class=&quot;headerlink&quot; title=&quot;定义线程&quot;&gt;&lt;/a&gt;定义线程&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;Java&lt;/code&gt;中，创建新的线程可以有两种方式，实现&lt;code&gt;Runnable&lt;/code&gt;接口或者继承&lt;code&gt;Thread&lt;/code&gt;类.&lt;/p&gt;
&lt;p&gt;实现&lt;code&gt;Runnable&lt;/code&gt;接口需要重写&lt;code&gt;run&lt;/code&gt;方法，&lt;code&gt;run&lt;/code&gt;方法定义了线程需要执行的任务。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Runnable&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;继承自&lt;code&gt;Thread&lt;/code&gt;类也需要重写&lt;code&gt;run&lt;/code&gt;方法，定义线程执行的任务。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;MyThread&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Thread&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用两种方式都能创建新的线程，由于&lt;code&gt;Java&lt;/code&gt;的单继承特性，如果需要从多个类进行继承，那么只能使用&lt;code&gt;Runnable&lt;/code&gt;接口实现新的线程。&lt;/p&gt;
&lt;h4 id=&quot;创建线程&quot;&gt;&lt;a href=&quot;#创建线程&quot; class=&quot;headerlink&quot; title=&quot;创建线程&quot;&gt;&lt;/a&gt;创建线程&lt;/h4&gt;&lt;p&gt;声明一个新的线程对象即创建了一个新的线程, 创建完线程之后，线程的状态为&lt;code&gt;New&lt;/code&gt;, 表示是新创建的, 还需要进行初始化才能执行。&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;MyThread thread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyThread()&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;启动线程&quot;&gt;&lt;a href=&quot;#启动线程&quot; class=&quot;headerlink&quot; title=&quot;启动线程&quot;&gt;&lt;/a&gt;启动线程&lt;/h3&gt;&lt;p&gt;启动线程时需要先创建该线程的一个实例，然后调用线程的&lt;code&gt;start&lt;/code&gt;方法，系统会自动创建一个新的线程并调用该线程的&lt;code&gt;run&lt;/code&gt;方法执行。示例代码如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(String[] args)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        MyThread thread = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; MyThread();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        thread.start();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特别需要强调的是&lt;/strong&gt;, 启动新的线程必须调用&lt;code&gt;start&lt;/code&gt;方法, 而不是&lt;code&gt;run&lt;/code&gt;方法。直接调用&lt;code&gt;run&lt;/code&gt;方法只会执行当前主线程的任务，而不是启动新的线程，与普通的方法调用没有区别。&lt;/p&gt;
&lt;p&gt;一旦调用&lt;code&gt;start&lt;/code&gt;方法，线程的状态就变为&lt;code&gt;runnable&lt;/code&gt;状态，表示线程可以运行，但是线程是否能运行取决于操作系统是否提供给足够的资源。目前操作系统的线程调度方式分为&lt;code&gt;抢占式线程调度&lt;/code&gt;和&lt;code&gt;协作式线程调度&lt;/code&gt;，前者是当线程使用完时间片之后，就会被剥夺控制权；后者是只有线程主动放弃控制权时，才会失去控制权。&lt;/p&gt;
&lt;h3 id=&quot;被阻塞线程和等待线程&quot;&gt;&lt;a href=&quot;#被阻塞线程和等待线程&quot; class=&quot;headerlink&quot; title=&quot;被阻塞线程和等待线程&quot;&gt;&lt;/a&gt;被阻塞线程和等待线程&lt;/h3&gt;&lt;p&gt;当线程处于&lt;code&gt;被阻塞&lt;/code&gt;或者&lt;code&gt;等待&lt;/code&gt;状态时，线程处于不活动状态，此时处于消耗资源最少的状态。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;当线程试图获取一个资源的锁对象时，而该锁被其他线程持有时，线程将进入&lt;code&gt;阻塞状态&lt;/code&gt;。当其他对象释放了该锁，并且线程调度器将控制权交给该线程的时候，线程才会继续运行，变成&lt;code&gt;非阻塞&lt;/code&gt;状态。&lt;/li&gt;
&lt;li&gt;当线程等待另外一个线程通知调度器状态时, 线程进入&lt;code&gt;等待状态&lt;/code&gt;。在调用&lt;code&gt;Thread.wait&lt;/code&gt;或者&lt;code&gt;Thread.join&lt;/code&gt;方法之后，线程进入等待状态，将会释放线程所占有的锁，并交出CPU执行控制权。&lt;/li&gt;
&lt;li&gt;当调用&lt;code&gt;wait&lt;/code&gt;方法或者&lt;code&gt;join&lt;/code&gt;方法以及&lt;code&gt;sleep&lt;/code&gt;方法指定超时时间时，线程进入&lt;code&gt;计时等待&lt;/code&gt;状态，该状态一直保持到计时结束或者调度器主动发送通知调度。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;sleep方法&quot;&gt;&lt;a href=&quot;#sleep方法&quot; class=&quot;headerlink&quot; title=&quot;sleep方法&quot;&gt;&lt;/a&gt;sleep方法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;sleep&lt;/code&gt;方法的调用方式如下：&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;sleep(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; millis)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;sleep(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; millis,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nanoseconds)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//第一个参数指定的是毫秒，第二个参数指定的是纳秒&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sleep&lt;/code&gt;方法使得线程睡眠，交出CPU控制权，但是并不释放锁。只能睡眠时间结束之后，才能回到&lt;code&gt;Runnable&lt;/code&gt;状态。&lt;/p&gt;
&lt;h4 id=&quot;yield方法&quot;&gt;&lt;a href=&quot;#yield方法&quot; class=&quot;headerlink&quot; title=&quot;yield方法&quot;&gt;&lt;/a&gt;yield方法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;yield&lt;/code&gt;方法与&lt;code&gt;sleep&lt;/code&gt;方法类似，是使得CPU交出控制权并执行其他任务，同样也不会释放锁。与&lt;code&gt;sleep&lt;/code&gt;方法不同的是，&lt;code&gt;yield&lt;/code&gt;方法不能控制具体交出CPU的时间。&lt;/p&gt;
&lt;h4 id=&quot;wait方法&quot;&gt;&lt;a href=&quot;#wait方法&quot; class=&quot;headerlink&quot; title=&quot;wait方法&quot;&gt;&lt;/a&gt;wait方法&lt;/h4&gt;&lt;p&gt;调用&lt;code&gt;wait&lt;/code&gt;方法会让进程进入到阻塞状态, 并且释放进程占用的锁，交出CPU的执行权。&lt;/p&gt;
&lt;h4 id=&quot;join方法&quot;&gt;&lt;a href=&quot;#join方法&quot; class=&quot;headerlink&quot; title=&quot;join方法&quot;&gt;&lt;/a&gt;join方法&lt;/h4&gt;&lt;p&gt;&lt;code&gt;join&lt;/code&gt;方法将指定的线程加入到当前线程中执行，直到该线程执行完或者执行一段时间之后再回到调用线程继续执行，&lt;code&gt;join&lt;/code&gt;方法的三个版本。&lt;br&gt;&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;join()&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;join(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; millis)     &lt;span class=&quot;comment&quot;&gt;//参数为毫秒&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;join(&lt;span class=&quot;keyword&quot;&gt;long&lt;/span&gt; millis,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; nanoseconds)    &lt;span class=&quot;comment&quot;&gt;//第一参数为毫秒，第二个参数为纳秒&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;调用&lt;code&gt;join&lt;/code&gt;方法实则是调用了&lt;code&gt;wait&lt;/code&gt;方法，因此&lt;code&gt;join&lt;/code&gt;方法也使得进程进入到阻塞状态。&lt;/p&gt;
&lt;h3 id=&quot;终止线程&quot;&gt;&lt;a href=&quot;#终止线程&quot; class=&quot;headerlink&quot; title=&quot;终止线程&quot;&gt;&lt;/a&gt;终止线程&lt;/h3&gt;&lt;p&gt;调用&lt;code&gt;interrupt&lt;/code&gt;方法可以使得线程进入到中断状态。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从本节开始，将通过一系列的文章博客介绍Java并发编程的相关内容。此处为第一篇，介绍Java多线程中线程的基本管理，包括线程创建，sleep以及中断等。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="并发" scheme="http://yoursite.com/tags/%E5%B9%B6%E5%8F%91/"/>
    
      <category term="线程" scheme="http://yoursite.com/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令-losf</title>
    <link href="http://yoursite.com/2016/05/24/Linux%E5%91%BD%E4%BB%A4-losf/"/>
    <id>http://yoursite.com/2016/05/24/Linux命令-losf/</id>
    <published>2016-05-24T03:26:07.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;lsof(list open files)是一个列出当前系统打开文件的工具。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。因为应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，因此通过lsof工具能够查看这个列表对系统监测以及排错将是很有帮助的。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;命令使用方式&quot;&gt;&lt;a href=&quot;#命令使用方式&quot; class=&quot;headerlink&quot; title=&quot;命令使用方式&quot;&gt;&lt;/a&gt;命令使用方式&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;lsof [options] [filename]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;输出格式&quot;&gt;&lt;a href=&quot;#输出格式&quot; class=&quot;headerlink&quot; title=&quot;输出格式&quot;&gt;&lt;/a&gt;输出格式&lt;/h4&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;COMMAND     PID  USER   FD     TYPE             DEVICE  SIZE/OFF     NODE NAME&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  cwd      DIR                1,4      1122        2 /&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  txt      REG                1,4    840176   351678 /System/Library/CoreServices/loginwindow.app/Contents/MacOS/loginwindow&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  txt      REG                1,4      1623    42437 /System/Library/PrivateFrameworks/LoginUIKit.framework/Versions/A/Resources/keyboard.pdf&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  txt      REG                1,4     50744 24773259 /private/var/folders/dj/pv392n3x6w7g5022jqc3lzd80000gn/C/mds/mdsDirectory.db&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  txt      REG                1,4      1960    20304 /System/Library/ColorSync/Profiles/Generic RGB Profile.icc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  txt      REG                1,4  24438480    50043 /usr/share/icu/icudt53l.dat&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  txt      REG                1,4    137152   147158 /System/Library/LoginPlugins/DisplayServices.loginPlugin/Contents/MacOS/DisplayServices&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  txt      REG                1,4    109920   146802 /System/Library/LoginPlugins/FSDisconnect.loginPlugin/Contents/MacOS/FSDisconnect&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;loginwind    89 talus  txt      REG                1,4   3759122    23132 /System/Library/CoreServices/SystemAppearance.bundle/Contents/Resources/SystemAppearance.car&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;输出中各项参数如下:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;command&lt;/code&gt;: 显示打开文件的命令&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PID&lt;/code&gt;: 进程号&lt;/li&gt;
&lt;li&gt;&lt;code&gt;USER&lt;/code&gt;: 用户&lt;/li&gt;
&lt;li&gt;&lt;code&gt;FD&lt;/code&gt;: 文件描述符号&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;选项和参数&quot;&gt;&lt;a href=&quot;#选项和参数&quot; class=&quot;headerlink&quot; title=&quot;选项和参数&quot;&gt;&lt;/a&gt;选项和参数&lt;/h3&gt;&lt;h3 id=&quot;部分实例&quot;&gt;&lt;a href=&quot;#部分实例&quot; class=&quot;headerlink&quot; title=&quot;部分实例&quot;&gt;&lt;/a&gt;部分实例&lt;/h3&gt;&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;lsof(list open files)是一个列出当前系统打开文件的工具。在linux环境下，任何事物都以文件的形式存在，通过文件不仅仅可以访问常规数据，还可以访问网络连接和硬件。所以如传输控制协议 (TCP) 和用户数据报协议 (UDP) 套接字等，系统在后台都为该应用程序分配了一个文件描述符，无论这个文件的本质如何，该文件描述符为应用程序与基础操作系统之间的交互提供了通用接口。因为应用程序打开文件的描述符列表提供了大量关于这个应用程序本身的信息，因此通过lsof工具能够查看这个列表对系统监测以及排错将是很有帮助的。&lt;/p&gt;
    
    </summary>
    
      <category term="Linux命令" scheme="http://yoursite.com/categories/Linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Bash" scheme="http://yoursite.com/tags/Bash/"/>
    
      <category term="lsof" scheme="http://yoursite.com/tags/lsof/"/>
    
  </entry>
  
  <entry>
    <title>Linux-部分常用命令总结</title>
    <link href="http://yoursite.com/2016/05/23/Linux-%E9%83%A8%E5%88%86%E5%86%B7%E9%97%A8%E5%91%BD%E4%BB%A4%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2016/05/23/Linux-部分冷门命令总结/</id>
    <published>2016-05-23T02:44:51.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;本文总结了部分冷门但是比较有用的&lt;code&gt;Linux&lt;/code&gt;命令, 以备查阅。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Commands&quot;&gt;&lt;a href=&quot;#Commands&quot; class=&quot;headerlink&quot; title=&quot;Commands&quot;&gt;&lt;/a&gt;Commands&lt;/h3&gt;&lt;h4 id=&quot;apropos&quot;&gt;&lt;a href=&quot;#apropos&quot; class=&quot;headerlink&quot; title=&quot;apropos&quot;&gt;&lt;/a&gt;apropos&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;用法: &lt;code&gt;apropos keyword&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;用途: 用于查找拼写相类似或者发音相类似的命令，在记不准确命令的情况下可以使用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;wc&quot;&gt;&lt;a href=&quot;#wc&quot; class=&quot;headerlink&quot; title=&quot;wc&quot;&gt;&lt;/a&gt;wc&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;用途: 统计指定文件中或标准输出中的words, lines, characters, bytes数目&lt;/li&gt;
&lt;li&gt;参数:&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-l&lt;/code&gt;: lines数目&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: bytes数目&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-w&lt;/code&gt;: words数目&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: characters数目&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;示例:  &lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;cat 1.txt | wc -lw&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;wc -lw 1.txt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本文总结了部分冷门但是比较有用的&lt;code&gt;Linux&lt;/code&gt;命令, 以备查阅。&lt;br&gt;
    
    </summary>
    
      <category term="Linux命令" scheme="http://yoursite.com/categories/Linux%E5%91%BD%E4%BB%A4/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Bash" scheme="http://yoursite.com/tags/Bash/"/>
    
  </entry>
  
  <entry>
    <title>g++常用编译选项</title>
    <link href="http://yoursite.com/2016/05/19/g-%E5%B8%B8%E7%94%A8%E7%BC%96%E8%AF%91%E9%80%89%E9%A1%B9/"/>
    <id>http://yoursite.com/2016/05/19/g-常用编译选项/</id>
    <published>2016-05-19T08:46:27.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;本篇博文主要汇总总结&lt;code&gt;g++&lt;/code&gt;和&lt;code&gt;gcc&lt;/code&gt;编译器常用的编译选项，以备以后查看。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;编译过程选项&quot;&gt;&lt;a href=&quot;#编译过程选项&quot; class=&quot;headerlink&quot; title=&quot;编译过程选项&quot;&gt;&lt;/a&gt;编译过程选项&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-E&lt;/code&gt;: 将源文件进行预处理，不进行编译和链接，默认输出为终端&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;: 将源文件编译生成汇编文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 将源文件编译生成目标文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-o&lt;/code&gt;: 将源文件或者目标文件编译生成可执行文件, &lt;code&gt;g++ -o outputname x1.cpp(x.o)&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Wall&lt;/code&gt;: 显示编译过程中所有的警告信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-save-temps&lt;/code&gt;: 保存编译过程中生成的所有中间文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-g&lt;/code&gt;: 在可执行文件中加入标准调试信息，用于程序调试&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-On&lt;/code&gt;: 编译优化，其中n为优化级别,范围为0-3, &lt;code&gt;O3&lt;/code&gt;是最高优化级别&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Idir&lt;/code&gt;: 将目录&lt;code&gt;dir&lt;/code&gt;所在的文件夹加入头文件搜索范围&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-Ldir&lt;/code&gt;: 将目录&lt;code&gt;dir&lt;/code&gt;所在的文件加入库文件搜索范围&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-lname&lt;/code&gt;: 链接时使用&lt;code&gt;libname.so&lt;/code&gt;的动态库或者&lt;code&gt;libname.a&lt;/code&gt;静态库&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Dname[=var]&lt;/code&gt;: 定义宏变量&lt;code&gt;name[=var]&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;库文件选项&quot;&gt;&lt;a href=&quot;#库文件选项&quot; class=&quot;headerlink&quot; title=&quot;库文件选项&quot;&gt;&lt;/a&gt;库文件选项&lt;/h3&gt;&lt;h4 id=&quot;静态库文件选项&quot;&gt;&lt;a href=&quot;#静态库文件选项&quot; class=&quot;headerlink&quot; title=&quot;静态库文件选项&quot;&gt;&lt;/a&gt;静态库文件选项&lt;/h4&gt;&lt;p&gt;生成静态库文件命令&lt;code&gt;ar&lt;/code&gt;选项&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;-a&lt;/code&gt;: 位置移动的指定器, 与&lt;code&gt;-r&lt;/code&gt;或者&lt;code&gt;-m&lt;/code&gt;一同使用, 文件将会被移动到指定的位置索引之后&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-b&lt;/code&gt;: 位置移动的指定器, 与&lt;code&gt;-r&lt;/code&gt;或者&lt;code&gt;-m&lt;/code&gt;一同使用, 文件将会被移动到指定的位置索引之前&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-c&lt;/code&gt;: 创建库文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-d&lt;/code&gt;: 删除库文件中指定的目标文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-i&lt;/code&gt;: 等同于&lt;code&gt;-b&lt;/code&gt;选项&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-m&lt;/code&gt;: 在库文件中移动指定的库文件位置，如果&lt;code&gt;-a&lt;/code&gt;或者&lt;code&gt;-b&lt;/code&gt;指定的话，那么移动库文件到该位置，否则移动到文件末尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p&lt;/code&gt;: 将指定的目标文件输出到标准输出，如果没有指定的话，则输出全部的目标文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-q&lt;/code&gt;: 快速生成静态库文件，不管目标文件是否已经包含在库文件中, 比&lt;code&gt;-r&lt;/code&gt;要快很多，但是库文件会有冗余&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-S&lt;/code&gt;: 打包静态库时不生成符号表，添加该选项生成的静态库文件无法直接使用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-t&lt;/code&gt;: 列出库文件中指定的目标文件列表，如果没有指定，则列出所有的目标文件&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-r&lt;/code&gt;: 替换或者在库文件末尾添加目标文件，如果库文件不存在，那么则创建库文件; 如果目标文件已存在，那么则替换成目标文件; 如果目标文件不存在，则添加到文件末尾&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-u&lt;/code&gt;: 更新库文件中的目标文件，与&lt;code&gt;-r&lt;/code&gt;选项共用时，只有更改比较新的目标文件才会被添加到库文件中; 与&lt;code&gt;-x&lt;/code&gt;选项共用时, 只有比文件中已有的目标文件更新时才会解压&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v&lt;/code&gt;: 显示打包过程中的输出信息&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-x&lt;/code&gt;: 将库文件中的指定的目标文件解压到当前目录，如果没有指定，则解压所有的目标文件&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;生成静态库文件的方式如下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -c x1.cpp x2.cpp ......&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ar crv libname.a x1.o x2.o&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在编译生成动态库的目标文件时，必须加上选项&lt;code&gt;-fPIC&lt;/code&gt;, 表示生成位置无关的目标代码，打包成动态库文件的生成方式如下:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -c &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt;PIC x1.cpp x2.cpp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -shared -o libname.so x1.o x2.o&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;也可以直接从源文件生成动态共享库&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ &lt;span class=&quot;_&quot;&gt;-f&lt;/span&gt;PIC -shared -o libname.so x1.cpp x2.cpp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;常用命令&quot;&gt;&lt;a href=&quot;#常用命令&quot; class=&quot;headerlink&quot; title=&quot;常用命令&quot;&gt;&lt;/a&gt;常用命令&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;p&gt;在Linux平台指定使用&lt;code&gt;C++&lt;/code&gt;标准库执行命令&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;g++ -std=c++11 input.cxx -o a.out&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;g++ -std=gnu++11 input.cxx -o a.out&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Mac OS X&lt;/code&gt; before Mavericks&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;g++ -std=c++11 -stdlib=libc++ input.cxx -o a.out&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;g++ -std=gnu++11 -stdlib=libc++ input.cxx -o a.out&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;clang++ -std=c++11 -stdlib=libc++ input.cxx -o a.out&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;clang++ -std=gnu++11 -stdlib=libc++ input.cxx -o a.out&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;code&gt;Mac OS X&lt;/code&gt; since Mavericks&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;clang++ -std=c++11 input.cxx -o a.out&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;clang++ -std=gnu++11 input.cxx -o a.out&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zhli.net/prog-algo/gcc-commonly-used-flags/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GCC 常用编译选项及相关工具&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/19774778/when-is-it-necessary-to-use-use-the-flag-stdlib-libstdc&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;When is it necessary to use use the flag -stdlib=libstdc++?&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本篇博文主要汇总总结&lt;code&gt;g++&lt;/code&gt;和&lt;code&gt;gcc&lt;/code&gt;编译器常用的编译选项，以备以后查看。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="G++" scheme="http://yoursite.com/tags/G/"/>
    
      <category term="编译器" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>C++编译过程解析</title>
    <link href="http://yoursite.com/2016/05/18/C-%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2016/05/18/C-编译过程解析/</id>
    <published>2016-05-18T09:35:04.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;本篇文章解析&lt;code&gt;C++&lt;/code&gt;的编译过程，并且说明如何编译成静态库，动态库以及动态库的加载过程。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;C-编译过程&quot;&gt;&lt;a href=&quot;#C-编译过程&quot; class=&quot;headerlink&quot; title=&quot;C++ 编译过程&quot;&gt;&lt;/a&gt;C++ 编译过程&lt;/h3&gt;&lt;p&gt;目前C++的编译过程包括四个阶段，分别为&lt;code&gt;Proprocessing&lt;/code&gt;, &lt;code&gt;Compilation&lt;/code&gt;, &lt;code&gt;Assembly&lt;/code&gt;和&lt;code&gt;Linking&lt;/code&gt;四个阶段, 四个阶段对应使用的工具分别是&lt;code&gt;preprocessor&lt;/code&gt;, &lt;code&gt;compiler&lt;/code&gt;, &lt;code&gt;assembler&lt;/code&gt;和&lt;code&gt;linker&lt;/code&gt;. 编译的四个阶段如下图所示:&lt;br&gt;&lt;img src=&quot;http://faculty.cs.niu.edu/~mcmahon/CS241/Images/compile.png&quot; alt=&quot;C++ Compile Process&quot;&gt;&lt;/p&gt;
&lt;p&gt;文章将通过一步一步编译如下的示例文件, 解释编译的过程, 该文件命名为&lt;code&gt;prog.cpp&lt;/code&gt;。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;define&lt;/span&gt; N 100&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; N + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;Hello World!&quot;&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Preprocessing&quot;&gt;&lt;a href=&quot;#Preprocessing&quot; class=&quot;headerlink&quot; title=&quot;Preprocessing&quot;&gt;&lt;/a&gt;Preprocessing&lt;/h4&gt;&lt;p&gt;&lt;code&gt;C++&lt;/code&gt;预处理器在预处理阶段，将&lt;code&gt;#include&lt;/code&gt;包含的&lt;code&gt;头文件&lt;/code&gt;拷贝到源文件中, 然后将文件中&lt;code&gt;#define&lt;/code&gt;定义的宏变量替换为其真实值。&lt;/p&gt;
&lt;p&gt;为了让&lt;code&gt;C++&lt;/code&gt;程序在进行预处理之后我们可以观察到其内容，可以采用&lt;code&gt;g++ -E&lt;/code&gt;命令。需要注意的是, 预处理之后的代码根据包含的头文件不同, 可能生成几十到几万行的代码，并且显示在&lt;code&gt;STDOUT&lt;/code&gt;中, 为此我们将输出重定向到文件中。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -E prog.cpp &amp;gt; preprocess.txt&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打开文件，可以看到生成的代码大部分内容都是包含进来的头文件, 示例程序中的宏变量已经做了替换。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;......(以上略)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38111 extern __attribute__ ((__visibility__(&amp;quot;default&amp;quot;))) istream cin;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38112 extern __attribute__ ((__visibility__(&amp;quot;default&amp;quot;))) ostream cout;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38113 extern __attribute__ ((__visibility__(&amp;quot;default&amp;quot;))) ostream cerr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38114 extern __attribute__ ((__visibility__(&amp;quot;default&amp;quot;))) ostream clog;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38115 extern __attribute__ ((__visibility__(&amp;quot;default&amp;quot;))) wistream wcin;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38116 extern __attribute__ ((__visibility__(&amp;quot;default&amp;quot;))) wostream wcout;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38117 extern __attribute__ ((__visibility__(&amp;quot;default&amp;quot;))) wostream wcerr;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38118 extern __attribute__ ((__visibility__(&amp;quot;default&amp;quot;))) wostream wclog;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38119&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38120 &amp;#125; &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38121 # 2 &amp;quot;prog.cpp&amp;quot; 2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38122&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38123 using namespace std;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38124&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38125 int main() &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38126     cout &amp;lt;&amp;lt; 100 + 1 &amp;lt;&amp;lt; endl;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38127     cout &amp;lt;&amp;lt; &amp;quot;Hello World!&amp;quot; &amp;lt;&amp;lt; endl;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38128 &amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Compiling&quot;&gt;&lt;a href=&quot;#Compiling&quot; class=&quot;headerlink&quot; title=&quot;Compiling&quot;&gt;&lt;/a&gt;Compiling&lt;/h4&gt;&lt;p&gt;在第二个阶段，&lt;code&gt;C++&lt;/code&gt;将生成的临时文件(上一个阶段输出到preprocess.txt的内容)编译成汇编文件。&lt;br&gt;使用&lt;code&gt;g++ -S&lt;/code&gt;选项可以让&lt;code&gt;g++&lt;/code&gt;在编译到汇编阶段停止, 默认情况下会生成与源代码文件同名的&lt;code&gt;.s&lt;/code&gt;汇编文件。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -S prog.cpp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;打开&lt;code&gt;prog.s&lt;/code&gt;文件, 可以看到是一系列的汇编代码.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;(以上略)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1070 Ltmp66:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1071     .cfi_offset %rbp, -16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1072     movq    %rsp, %rbp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1073 Ltmp67:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1074     .cfi_def_cfa_register %rbp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1075     movl    $4294967295, %eax       ## imm = 0xFFFFFFFF&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1076     popq    %rbp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1077     retq&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1078     .cfi_endproc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1079&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1080     .section    __TEXT,__cstring,cstring_literals&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1081 L_.str:                                 ## @.str&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1082     .asciz  &amp;quot;Hello World!&amp;quot;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1083&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1084&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;1085 .subsections_via_symbols&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Assembly&quot;&gt;&lt;a href=&quot;#Assembly&quot; class=&quot;headerlink&quot; title=&quot;Assembly&quot;&gt;&lt;/a&gt;Assembly&lt;/h4&gt;&lt;p&gt;第二个阶段生成的&lt;code&gt;.s&lt;/code&gt;汇编文件会在第三阶段转换为&lt;code&gt;.o&lt;/code&gt;文件, 使用&lt;code&gt;g++ -c&lt;/code&gt;选项可以生成&lt;code&gt;.o&lt;/code&gt;文件, &lt;code&gt;.o&lt;/code&gt;文件是二进制文件，可以使用&lt;code&gt;readelf&lt;/code&gt;软件打开查看。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -c prog.cpp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;Linking&quot;&gt;&lt;a href=&quot;#Linking&quot; class=&quot;headerlink&quot; title=&quot;Linking&quot;&gt;&lt;/a&gt;Linking&lt;/h4&gt;&lt;p&gt;链接是编译的最后一个步骤, 编译器将一个或者多个的&lt;code&gt;.o&lt;/code&gt;文件与其他的动态库或者静态库进行链接, 最后生成一个可执行文件或者库文件。&lt;br&gt;在第四阶段，生成的&lt;code&gt;.o&lt;/code&gt;文件将会与其他依赖的静态库或动态库文件进行链接, 最后生成可执行文件。默认不加任何参数的&lt;code&gt;g++&lt;/code&gt;命令会生成名为&lt;code&gt;a.out&lt;/code&gt;或&lt;code&gt;a.exe&lt;/code&gt;的可执行文件。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;g++ prog.cpp&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;C-动态库和静态库&quot;&gt;&lt;a href=&quot;#C-动态库和静态库&quot; class=&quot;headerlink&quot; title=&quot;C++动态库和静态库&quot;&gt;&lt;/a&gt;C++动态库和静态库&lt;/h3&gt;&lt;p&gt;在编译的第四个阶段，编译器将生成的&lt;code&gt;Object&lt;/code&gt;文件与库文件链接成为可执行文件，根据链接阶段如何将库文件链接成可执行的程序。库文件分为静态链接方式和动态链接方式。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;静态链接方式：对应的库为静态库，链接时将生成的&lt;code&gt;Object&lt;/code&gt;文件与库一起打包生成可执行文件中&lt;/li&gt;
&lt;li&gt;动态链接方式：对应的库为动态库，链接时并没有被编译进可执行文件中，在程序执行到相关的函数时才从动态库中调用。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;静态库的名字一般为&lt;code&gt;libxxx.a&lt;/code&gt;(Unix), &lt;code&gt;libxxx.lib&lt;/code&gt;(Windows), 可以视为是一组&lt;code&gt;Object&lt;/code&gt;文件的集合。静态库的优点为:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;运行时不再依赖编的函数库;&lt;/li&gt;
&lt;li&gt;运行时加载速度比较快;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;缺点也是显而易见的:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;浪费空间，每个程序都单独打包静态库，那么N个程序实际上只需要一份静态库，其他的空间都被浪费掉了。&lt;/li&gt;
&lt;li&gt;更新软件困难，一旦静态库需要进行改动，那么整个程序都需要重新编译和打包，对于游戏或者大型软件是不可接受的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;动态库的名字一般为&lt;code&gt;libxxx.so&lt;/code&gt;(Unix), &lt;code&gt;libxxx.dll&lt;/code&gt;(Windows)。其优缺点与静态库相反, 动态库可以节省大量的空间，动态库只需要在内存中加载一次，其余的程序就可以共用这一静态库。其次，使用动态库的程序更新也更加方便，保持接口不变的情况下，只需要替换相应的动态库文件即可，不需要对整个软件包进行重新编译。其缺点就是在加载过程略慢。&lt;/p&gt;
&lt;h4 id=&quot;库文件示例文件&quot;&gt;&lt;a href=&quot;#库文件示例文件&quot; class=&quot;headerlink&quot; title=&quot;库文件示例文件&quot;&gt;&lt;/a&gt;库文件示例文件&lt;/h4&gt;&lt;p&gt;以&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms235627.aspx#BKMK_CreateLibProject&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Microsoft Static Library&lt;/a&gt;的&lt;code&gt;MathFuncsLib&lt;/code&gt;为例，在Linux下打包静态库和动态库。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MathFuncsLib.h&lt;/code&gt;文件：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; MathFuncs&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Subtract&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Multiply&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Divide&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;MathFuncsLib.cpp&lt;/code&gt;文件:&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&quot;MathFuncsLib.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; MathFuncs::Add(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a + b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; MathFuncs::Subtract(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a - b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; MathFuncs::Multiply(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a * b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; MathFuncs::Divide(&lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; b) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a / b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;ExecMathFuncsLib.cpp&lt;/code&gt;文件, 调用库文件的测试代码:&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&quot;MathFuncsLib.h&quot;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;using&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;namespace&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;double&lt;/span&gt; a = &lt;span class=&quot;number&quot;&gt;7.4&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; b = &lt;span class=&quot;number&quot;&gt;99&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;a + b = &quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        MathFuncs::Add(a, b) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;a - b = &quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        MathFuncs::Subtract(a, b) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;a * b = &quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        MathFuncs::Multiply(a, b) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;a / b = &quot;&lt;/span&gt; &amp;lt;&amp;lt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        MathFuncs::Divide(a, b) &amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;Linux下生成静态库&quot;&gt;&lt;a href=&quot;#Linux下生成静态库&quot; class=&quot;headerlink&quot; title=&quot;Linux下生成静态库&quot;&gt;&lt;/a&gt;Linux下生成静态库&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;Linux&lt;/code&gt;下生成静态库使用的是&lt;code&gt;ar&lt;/code&gt;命令，&lt;code&gt;ar&lt;/code&gt;命令读入一个目标文件, 然后将其打包为&lt;code&gt;.a&lt;/code&gt;静态库文件。&lt;/p&gt;
&lt;p&gt;首先生成&lt;code&gt;Object&lt;/code&gt;文件, 之后使用&lt;code&gt;ar&lt;/code&gt;命令打包成为静态库文件.&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -c MathFuncsLib.cpp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ar -crv libmathfuncs.a MathFuncsLib.o&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可以看到在工程目录下已经生成了静态库文件&lt;code&gt;libmathfuncs.a&lt;/code&gt;。在使用&lt;code&gt;ExecMathFuncsLib.cpp&lt;/code&gt;示例文件时，编译时指定参数静态库的路径和静态库名，静态库名不需要使用&lt;code&gt;lib&lt;/code&gt;前缀和&lt;code&gt;.a&lt;/code&gt;后缀，系统会自动寻找库名相匹配的文件，搜索路径在当前例子中就是当前目录&lt;code&gt;.&lt;/code&gt;。&lt;code&gt;-L&lt;/code&gt;参数指定搜索路径, &lt;code&gt;-l&lt;/code&gt;参数指定动态库或静态库的名称。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ ExecMathFuncsLib.cpp -L. -lmathfuncs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;在编译完测试文件之后, 已经生成了可执行文件&lt;code&gt;a.out&lt;/code&gt;.&lt;/p&gt;
&lt;h4 id=&quot;使用Linux静态库&quot;&gt;&lt;a href=&quot;#使用Linux静态库&quot; class=&quot;headerlink&quot; title=&quot;使用Linux静态库&quot;&gt;&lt;/a&gt;使用Linux静态库&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;Linux&lt;/code&gt;下生成动态库使用&lt;code&gt;g++ -shared&lt;/code&gt;命令即可，读入一个目标文件，然后将其编译为动态文件&lt;code&gt;.so&lt;/code&gt;文件。&lt;/p&gt;
&lt;p&gt;首先生成目标文件，之后使用&lt;code&gt;g++&lt;/code&gt;命令打包成为动态库文件。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -c MathFuncsLib.cpp&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ g++ -shared -o libmathfuncs.so MathFuncsLib.o&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行完该命令之后，可以看到在目录下已经生成了动态库文件&lt;code&gt;libmathfuncs.so&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ ExecMathFuncsLib.cpp -L. -lmathfuncs&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h4 id=&quot;动态库加载方式&quot;&gt;&lt;a href=&quot;#动态库加载方式&quot; class=&quot;headerlink&quot; title=&quot;动态库加载方式&quot;&gt;&lt;/a&gt;动态库加载方式&lt;/h4&gt;&lt;p&gt;由于该例子生成的动态库和测试样例在同一个文件目录下, 所以直接编译运行即可。现在尝试将&lt;code&gt;libmathfuncs.so&lt;/code&gt;移动到&lt;code&gt;lib&lt;/code&gt;子目录下, 此时使用如下的命令编译运行测试文件:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ g++ ExecMathFuncsLib.cpp -L./lib -lmathfuncs&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ./a.out&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;发现运行该程序时会报错显示动态库加载不成功，错误信息如下:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;dyld: Library not loaded: libmathfuncs.so&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Referenced from: xxxxx/a.out&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  Reason: image not found&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Trace/BPT trap: 5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;dyld&lt;/code&gt;是&lt;code&gt;dynamic loader&lt;/code&gt;的缩写，&lt;code&gt;dyld&lt;/code&gt;的主要功能是加载动态共享库，在加载动态库时，&lt;code&gt;dyld&lt;/code&gt;会依次按照如下的顺序加载:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;环境变量&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;指定的路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/etc/ld.so.cache&lt;/code&gt;文件中指定的路径&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/lib&lt;/code&gt;目录&lt;/li&gt;
&lt;li&gt;&lt;code&gt;/usr/lib&lt;/code&gt;目录&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;因此如果想让程序找到动态库, 有如下的三种方式可以实现:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;将动态库路径加到&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;中&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;export&lt;/span&gt; LD_LIBRARY_PATH=&lt;span class=&quot;variable&quot;&gt;$LD_LIBRARY_PATH&lt;/span&gt;:you_path&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在&lt;code&gt;/etc/ld.so.conf&lt;/code&gt;文件中添加路径，并且执行&lt;code&gt;ldconfig&lt;/code&gt;命令重新构建&lt;code&gt;/etc/ld.so.cache&lt;/code&gt;文件。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;将动态库文件复制到&lt;code&gt;/lib&lt;/code&gt;或者&lt;code&gt;/usr/lib&lt;/code&gt;中。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;通常情况下，第一种方式是不建议在生产环境中使用的, 由于&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;是全局的变量, 很多程序都依赖于该变量会使得一旦&lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;配置错误就会影响大量的程序。通常, &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;变量主要用来临时配置动态库路径或者临时测试使用。另外一种说法是第二种方式与第一种方式是可能会产生同样的问题，也不被建议使用。&lt;/p&gt;
&lt;p&gt;规范建议的使用方式是通过&lt;code&gt;g++ -rpath=your_path&lt;/code&gt;参数指定运行环境, 而使用&lt;code&gt;-Lyour_path&lt;/code&gt;指定链接时的环境,这种做法会减少对其他程序的影响。&lt;br&gt;示例程序编译运行的建议做法为:&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;g++ ExecMathFuncsLib.cpp -L./lib -lmathfuncs -rpath=./lib&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考文献&quot;&gt;&lt;a href=&quot;#参考文献&quot; class=&quot;headerlink&quot; title=&quot;参考文献&quot;&gt;&lt;/a&gt;参考文献&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://faculty.cs.niu.edu/~mcmahon/CS241/Notes/compile.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;The C++ compilation process&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/6264249/how-does-the-compilation-linking-process-work&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How does the compilation/linking process work?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.tenouk.com/ModuleW.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;COMPILER, ASSEMBLER, LINKER AND LOADER: A BRIEF STORY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://msdn.microsoft.com/en-us/library/ms235627.aspx#BKMK_CreateLibProject&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Walkthrough: Creating and Using a Static Library (C++)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ituring.com.cn/article/22101&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Why LD_LIBRARY_PATH is bad&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;本篇文章解析&lt;code&gt;C++&lt;/code&gt;的编译过程，并且说明如何编译成静态库，动态库以及动态库的加载过程。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="G++" scheme="http://yoursite.com/tags/G/"/>
    
      <category term="编译器" scheme="http://yoursite.com/tags/%E7%BC%96%E8%AF%91%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>只用位运算实现两个整数大小比较</title>
    <link href="http://yoursite.com/2016/04/26/%E5%8F%AA%E7%94%A8%E4%BD%8D%E8%BF%90%E7%AE%97%E5%AE%9E%E7%8E%B0%E4%B8%A4%E4%B8%AA%E6%95%B4%E6%95%B0%E5%A4%A7%E5%B0%8F%E6%AF%94%E8%BE%83/"/>
    <id>http://yoursite.com/2016/04/26/只用位运算实现两个整数大小比较/</id>
    <published>2016-04-26T11:05:52.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;据说是某软的面试题, 只用位运算，不用四则运算以及比较运算符比较两个无符号整数的大小, 时间复杂度限制在O(logL)之内。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;解题思路&quot;&gt;&lt;a href=&quot;#解题思路&quot; class=&quot;headerlink&quot; title=&quot;解题思路&quot;&gt;&lt;/a&gt;解题思路&lt;/h3&gt;&lt;p&gt;假设有两个&lt;code&gt;unsigned int32&lt;/code&gt;的变量&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;, &lt;code&gt;a&lt;/code&gt;^&lt;code&gt;b&lt;/code&gt;的结果就是&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;中相同的二进制位变为0,相异的二进制位变为1。其结果记为&lt;code&gt;c&lt;/code&gt;,&lt;code&gt;c&lt;/code&gt;的结果二进制形式可以表示为&lt;code&gt;0...01xxxxxx&lt;/code&gt;, 从最高位开始数的第一个&lt;code&gt;1&lt;/code&gt;就是&lt;code&gt;a&lt;/code&gt;和&lt;code&gt;b&lt;/code&gt;之间最高位置不同的数字。接下的工作其实只需要确定&lt;code&gt;a&lt;/code&gt;中这一位是&lt;code&gt;0&lt;/code&gt;还是&lt;code&gt;1&lt;/code&gt;, 如果是&lt;code&gt;0&lt;/code&gt;, 那么表示&lt;code&gt;a &amp;lt; b&lt;/code&gt;; 反之&lt;code&gt;a &amp;gt; b&lt;/code&gt;。提取出最高的位的方法可以使用&lt;code&gt;a&lt;/code&gt;与&lt;code&gt;0...01...0&lt;/code&gt;做交集，如果得到的值为&lt;code&gt;0&lt;/code&gt;, 那么&lt;code&gt;a&lt;/code&gt;原来位置上就是&lt;code&gt;0&lt;/code&gt;, 反之就是&lt;code&gt;1&lt;/code&gt;;&lt;/p&gt;
&lt;p&gt;下面这一步是比较巧妙的一步, 如何获得&lt;code&gt;0...01...0&lt;/code&gt;，可以使用如下的方法。假设&lt;code&gt;d&lt;/code&gt;的二进制表示为&lt;code&gt;0...01...1&lt;/code&gt;, 即一部分全0连接一部分全1, 那么&lt;code&gt;d ^= d &amp;gt;&amp;gt; 1&lt;/code&gt;就可以得到&lt;code&gt;0...01...0&lt;/code&gt;。 下面的问题就是如何得到&lt;code&gt;0...01...1&lt;/code&gt;, 可以观察到&lt;code&gt;0...01xxxxxx&lt;/code&gt;, 中最高位为&lt;code&gt;1&lt;/code&gt;，那么计算&lt;code&gt;c |= c &amp;gt;&amp;gt; 1&lt;/code&gt;就可以将最高位的下一位变为&lt;code&gt;1&lt;/code&gt;。同理，将此时计算&lt;code&gt;c |= c &amp;gt;&amp;gt; 2&lt;/code&gt;就可以将最高位的&lt;code&gt;11&lt;/code&gt;复制为&lt;code&gt;1111&lt;/code&gt;, 依此类推，就会将后面的&lt;code&gt;xxxx&lt;/code&gt;全部替换为&lt;code&gt;1111....&lt;/code&gt;。&lt;/p&gt;
&lt;h3 id=&quot;C-代码-来源于夏洋&quot;&gt;&lt;a href=&quot;#C-代码-来源于夏洋&quot; class=&quot;headerlink&quot; title=&quot;C++ 代码(来源于夏洋)&quot;&gt;&lt;/a&gt;C++ 代码(来源于夏洋)&lt;/h3&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;compare&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; a, &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; b)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;uint32_t&lt;/span&gt; diff = a ^ b;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!diff) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;comment&quot;&gt;// 001xxxxx -&amp;gt; 00100000&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  diff |= diff &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  diff |= diff &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  diff |= diff &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  diff |= diff &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  diff |= diff &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  diff ^= diff &amp;gt;&amp;gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; a &amp;amp; diff ? &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;作者：夏洋&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;链接：https:&lt;span class=&quot;comment&quot;&gt;//www.zhihu.com/question/44356016/answer/97251524&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;来源：知乎&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.zhihu.com/question/44356016&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;只用位运算实现比较两整数大小，有没有简短优雅的O(1)的解法？&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;据说是某软的面试题, 只用位运算，不用四则运算以及比较运算符比较两个无符号整数的大小, 时间复杂度限制在O(logL)之内。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="BrainStorm" scheme="http://yoursite.com/tags/BrainStorm/"/>
    
  </entry>
  
  <entry>
    <title>C++泛型算法索引</title>
    <link href="http://yoursite.com/2016/04/25/C-%E6%B3%9B%E5%9E%8B%E7%AE%97%E6%B3%95%E7%B4%A2%E5%BC%95/"/>
    <id>http://yoursite.com/2016/04/25/C-泛型算法索引/</id>
    <published>2016-04-25T11:08:04.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;C++泛型算法除了常用的&lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;fill&lt;/code&gt;等之外，还有其他的很多的不常用的泛型算法，本篇文章就对&lt;code&gt;C++泛型算法&lt;/code&gt;做一个索引列表，以便查询。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;algorithm&amp;gt;&lt;/code&gt;头文件定义了一系列函数，这些函数会在一定范围之内的元素(ranges of elements)上进行操作。&lt;/p&gt;
&lt;h3 id=&quot;只读算法&quot;&gt;&lt;a href=&quot;#只读算法&quot; class=&quot;headerlink&quot; title=&quot;只读算法&quot;&gt;&lt;/a&gt;只读算法&lt;/h3&gt;&lt;p&gt;只读算法只会读取输入范围之内的元素，而不会更改这些元素。&lt;/p&gt;
&lt;h4 id=&quot;all-of&quot;&gt;&lt;a href=&quot;#all-of&quot; class=&quot;headerlink&quot; title=&quot;all_of&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/all_of/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;all_of&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;测试输入范围之内的元素是否都满足条件。&lt;/p&gt;
&lt;h4 id=&quot;any-of&quot;&gt;&lt;a href=&quot;#any-of&quot; class=&quot;headerlink&quot; title=&quot;any_of&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/any_of/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;any_of&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;测试输入范围之内的元素是否至少有一个满足条件。&lt;/p&gt;
&lt;h4 id=&quot;none-of&quot;&gt;&lt;a href=&quot;#none-of&quot; class=&quot;headerlink&quot; title=&quot;none_of&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/none_of/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;none_of&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;测试输入范围之内的元素是全部不满足条件。&lt;/p&gt;
&lt;h4 id=&quot;for-each&quot;&gt;&lt;a href=&quot;#for-each&quot; class=&quot;headerlink&quot; title=&quot;for_each&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/for_each/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;for_each&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;对输入范围之内的元素执行&lt;code&gt;function&lt;/code&gt;定义的操作，如果给定的迭代器不是&lt;code&gt;const_iterator&lt;/code&gt;, 那么该函数可能会改变元素的值。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Function&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;Function &lt;span class=&quot;title&quot;&gt;for_each&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(InputIterator first, InputIterator last, Function fn)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;find&quot;&gt;&lt;a href=&quot;#find&quot; class=&quot;headerlink&quot; title=&quot;find&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/find/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;find&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在输入范围之内寻找是否存在满足要求的第一个元素，返回类型为迭代器。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; T&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;InputIterator &lt;span class=&quot;title&quot;&gt;find&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(InputIterator first, InputIterator last, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; T&amp;amp; val)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;find-if&quot;&gt;&lt;a href=&quot;#find-if&quot; class=&quot;headerlink&quot; title=&quot;find_if&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/find_if/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;find_if&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在输入范围之内寻找满足指定条件的第一个元素，返回类型为迭代器。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; UnaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;InputIterator &lt;span class=&quot;title&quot;&gt;find_if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(InputIterator first, InputIterator last, UnaryPredicate pred)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;find-if-not&quot;&gt;&lt;a href=&quot;#find-if-not&quot; class=&quot;headerlink&quot; title=&quot;find_if_not&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/find_if_not/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;find_if_not&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在输入范围之内寻找不满足满足指定条件的第一个元素，返回类型为迭代器。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; UnaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;InputIterator &lt;span class=&quot;title&quot;&gt;find_if_not&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(InputIterator first, InputIterator last, UnaryPredicate pred)&lt;/span&gt;&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;find-end&quot;&gt;&lt;a href=&quot;#find-end&quot; class=&quot;headerlink&quot; title=&quot;find_end&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/find_end/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;find_end&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;first1&lt;/code&gt;和&lt;code&gt;last1&lt;/code&gt;指定的区间内寻找最后一次出现的与&lt;code&gt;first2&lt;/code&gt;和&lt;code&gt;last2&lt;/code&gt;完全匹配的区间，并且返回区间第一个元素所在的位置。&lt;code&gt;pred&lt;/code&gt;表示判断两个元素是否匹配的函数，缺省条件下使用&lt;code&gt;==&lt;/code&gt;运算符比较是否匹配。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator1, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator2, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; BinaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;ForwardIterator1 &lt;span class=&quot;title&quot;&gt;find_end&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(ForwardIterator1 first1, ForwardIterator1 last1,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                              ForwardIterator2 first2, ForwardIterator2 last2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                              BinaryPredicate pred);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;示例:&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; myints[] = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; haystack (myints,myints+&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; needle1[] = &amp;#123;&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 该函数会返回第6个元素所在的迭代器位置&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;::iterator it;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;it = &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::find_end (haystack.begin(), haystack.end(), needle1, needle1+&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;needle1 last found at position &quot;&lt;/span&gt; &amp;lt;&amp;lt; (it-haystack.begin()) &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// 输出结果为: needle1 found at position 5&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;find-first-of&quot;&gt;&lt;a href=&quot;#find-first-of&quot; class=&quot;headerlink&quot; title=&quot;find_first_of&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/find_first_of/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;find_first_of&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;first1&lt;/code&gt;和&lt;code&gt;last1&lt;/code&gt;指定的区间内寻找第一次出现的与&lt;code&gt;first2&lt;/code&gt;和&lt;code&gt;last2&lt;/code&gt;完全匹配的区间，并且返回区间第一个元素所在的位置。&lt;code&gt;pred&lt;/code&gt;表示判断两个元素是否匹配的函数，缺省条件下使用&lt;code&gt;==&lt;/code&gt;运算符比较是否匹配。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator1, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator2, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; BinaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;ForwardIterator1 &lt;span class=&quot;title&quot;&gt;find_first_of&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(ForwardIterator1 first1, ForwardIterator1 last1,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                   ForwardIterator2 first2, ForwardIterator2 last2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                   BinaryPredicate pred);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;adjacent-find&quot;&gt;&lt;a href=&quot;#adjacent-find&quot; class=&quot;headerlink&quot; title=&quot;adjacent_find&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/adjacent_find/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;adjacent_find&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;first&lt;/code&gt;和&lt;code&gt;last&lt;/code&gt;指定的范围内寻找第一次出现的相邻元素之间满足匹配的区间，并且返回区间第一个元素所在的位置。&lt;code&gt;pred&lt;/code&gt;表示判断两个元素是否匹配的函数，缺省条件下使用&lt;code&gt;==&lt;/code&gt;运算符比较是否匹配。。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; BinaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;ForwardIterator &lt;span class=&quot;title&quot;&gt;adjacent_find&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(ForwardIterator first, ForwardIterator last,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                                  BinaryPredicate pred);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;样例&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; myints[] = &amp;#123;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; myvector (myints,myints+&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;it = &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::adjacent_find (myvector.begin(), myvector.end());&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//返回第4个元素所在迭代器，因为第4个元素和第5个元素满足30==30&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;count&quot;&gt;&lt;a href=&quot;#count&quot; class=&quot;headerlink&quot; title=&quot;count&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/count/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;count&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在输入范围之内统计指定元素的个数。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; T&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; iterator_traits&amp;lt;InputIterator&amp;gt;::&lt;span class=&quot;function&quot;&gt;difference_type&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;count&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(InputIterator first, InputIterator last, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; T&amp;amp; val)&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;count-if&quot;&gt;&lt;a href=&quot;#count-if&quot; class=&quot;headerlink&quot; title=&quot;count_if&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/count_if/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;count_if&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在输入范围之内统计满足指定条件元素的个数。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; UnaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;typename&lt;/span&gt; iterator_traits&amp;lt;InputIterator&amp;gt;::&lt;span class=&quot;function&quot;&gt;difference_type&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;title&quot;&gt;count_if&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(InputIterator first, InputIterator last, UnaryPredicate pred)&lt;/span&gt;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;mismatch&quot;&gt;&lt;a href=&quot;#mismatch&quot; class=&quot;headerlink&quot; title=&quot;mismatch&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/mismatch/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;mismatch&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;返回在&lt;code&gt;first1&lt;/code&gt;和&lt;code&gt;last1&lt;/code&gt;范围内与以&lt;code&gt;first2&lt;/code&gt;开始的输入范围中第一个不匹配的元素对，返回类型为&lt;code&gt;pair&lt;/code&gt;。pair的一个元素表示在第一个范围内的迭代地址，第二个元素表示在第二个范围内的迭代地址。&lt;br&gt;&lt;code&gt;pred&lt;/code&gt;参数同上。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator1, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator2, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; BinaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  pair&amp;lt;InputIterator1, InputIterator2&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    mismatch (InputIterator1 first1, InputIterator1 last1,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              InputIterator2 first2, BinaryPredicate pred);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;样例:&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; myvector;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i&amp;lt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;; i++) myvector.push_back (i*&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;// myvector: 10 20 30 40 50&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; myints[] = &amp;#123;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;80&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;320&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;1024&lt;/span&gt;&amp;#125;;                &lt;span class=&quot;comment&quot;&gt;//   myints: 10 20 80 320 1024&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::pair&amp;lt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;::iterator,&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;*&amp;gt; mypair;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// using default comparison:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;mypair = &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::mismatch (myvector.begin(), myvector.end(), myints);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;First mismatching elements: &quot;&lt;/span&gt; &amp;lt;&amp;lt; *mypair.first;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot; and &quot;&lt;/span&gt; &amp;lt;&amp;lt; *mypair.second &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//输出: First mismatching elements: 30 and 80&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;equal&quot;&gt;&lt;a href=&quot;#equal&quot; class=&quot;headerlink&quot; title=&quot;equal&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/equal/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;equal&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;检查&lt;code&gt;first1&lt;/code&gt;和&lt;code&gt;last1&lt;/code&gt;指定范围内与&lt;code&gt;first2&lt;/code&gt;开始的区间元素是否完全一致, &lt;code&gt;pred&lt;/code&gt;参数同上。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator1, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; InputIterator2, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; BinaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;equal&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(InputIterator1 first1, InputIterator1 last1,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;              InputIterator2 first2, BinaryPredicate pred);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;is-permutation&quot;&gt;&lt;a href=&quot;#is-permutation&quot; class=&quot;headerlink&quot; title=&quot;is_permutation&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/is_permutation/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;is_permutation&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;检查&lt;code&gt;first1&lt;/code&gt;和&lt;code&gt;last1&lt;/code&gt;指定范围内与&lt;code&gt;first2&lt;/code&gt;开始的区间元素是否是排列的两种形式,即元素一直，顺序可以不一致, &lt;code&gt;pred&lt;/code&gt;参数同上。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator1, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator2, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; BinaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;is_permutation&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(ForwardIterator1 first1, ForwardIterator1 last1,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                        ForwardIterator2 first2, BinaryPredicate pred);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;search&quot;&gt;&lt;a href=&quot;#search&quot; class=&quot;headerlink&quot; title=&quot;search&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/search/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;search&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;first1&lt;/code&gt;和&lt;code&gt;last1&lt;/code&gt;指定的区间内寻找第一次出现的与&lt;code&gt;first2&lt;/code&gt;和&lt;code&gt;last2&lt;/code&gt;完全匹配的区间，并且返回区间第一个元素所在的位置, &lt;code&gt;pred&lt;/code&gt;参数同上。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator1, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator2, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; BinaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;ForwardIterator1 &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;(ForwardIterator1 first1, ForwardIterator1 last1,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            ForwardIterator2 first2, ForwardIterator2 last2,&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                            BinaryPredicate pred);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h4 id=&quot;search-n&quot;&gt;&lt;a href=&quot;#search-n&quot; class=&quot;headerlink&quot; title=&quot;search_n&quot;&gt;&lt;/a&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/search_n/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;search_n&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;在&lt;code&gt;first1&lt;/code&gt;和&lt;code&gt;last1&lt;/code&gt;指定的区间内寻找至少出现&lt;code&gt;count&lt;/code&gt;次的&lt;code&gt;val&lt;/code&gt;的位置, 并且返回第一次出现的位置,  &lt;code&gt;pred&lt;/code&gt;参数同上。&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;template&lt;/span&gt; &amp;lt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; ForwardIterator, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Size, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; T, &lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; BinaryPredicate&amp;gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   &lt;span class=&quot;function&quot;&gt;ForwardIterator &lt;span class=&quot;title&quot;&gt;search_n&lt;/span&gt; &lt;span class=&quot;params&quot;&gt;( ForwardIterator first, ForwardIterator last,&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                              Size count, &lt;span class=&quot;keyword&quot;&gt;const&lt;/span&gt; T&amp;amp; val, BinaryPredicate pred);&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;样例&lt;br&gt;&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; myints[]=&amp;#123;&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; myvector (myints,myints+&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;::iterator it;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;// using default comparison:&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;it = &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::search_n (myvector.begin(), myvector.end(), &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (it!=myvector.end())&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;two 30s found at position &quot;&lt;/span&gt; &amp;lt;&amp;lt; (it-myvector.begin()) &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&#39;\n&#39;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt; &amp;lt;&amp;lt; &lt;span class=&quot;string&quot;&gt;&quot;match not found\n&quot;&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//输出: Two 30s found at position 2&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;写容器算法&quot;&gt;&lt;a href=&quot;#写容器算法&quot; class=&quot;headerlink&quot; title=&quot;写容器算法&quot;&gt;&lt;/a&gt;写容器算法&lt;/h3&gt;&lt;h3 id=&quot;容器分割算法&quot;&gt;&lt;a href=&quot;#容器分割算法&quot; class=&quot;headerlink&quot; title=&quot;容器分割算法&quot;&gt;&lt;/a&gt;容器分割算法&lt;/h3&gt;&lt;h3 id=&quot;容器排序算法&quot;&gt;&lt;a href=&quot;#容器排序算法&quot; class=&quot;headerlink&quot; title=&quot;容器排序算法&quot;&gt;&lt;/a&gt;容器排序算法&lt;/h3&gt;&lt;h3 id=&quot;二分查找算法&quot;&gt;&lt;a href=&quot;#二分查找算法&quot; class=&quot;headerlink&quot; title=&quot;二分查找算法&quot;&gt;&lt;/a&gt;二分查找算法&lt;/h3&gt;&lt;h3 id=&quot;合并算法&quot;&gt;&lt;a href=&quot;#合并算法&quot; class=&quot;headerlink&quot; title=&quot;合并算法&quot;&gt;&lt;/a&gt;合并算法&lt;/h3&gt;&lt;h3 id=&quot;堆算法&quot;&gt;&lt;a href=&quot;#堆算法&quot; class=&quot;headerlink&quot; title=&quot;堆算法&quot;&gt;&lt;/a&gt;堆算法&lt;/h3&gt;&lt;h3 id=&quot;最大最小算法&quot;&gt;&lt;a href=&quot;#最大最小算法&quot; class=&quot;headerlink&quot; title=&quot;最大最小算法&quot;&gt;&lt;/a&gt;最大最小算法&lt;/h3&gt;&lt;h3 id=&quot;其他算法&quot;&gt;&lt;a href=&quot;#其他算法&quot; class=&quot;headerlink&quot; title=&quot;其他算法&quot;&gt;&lt;/a&gt;其他算法&lt;/h3&gt;&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cplusplus.com/reference/algorithm/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;C++ Reference&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;C++ Primer&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;C++泛型算法除了常用的&lt;code&gt;sort&lt;/code&gt;, &lt;code&gt;fill&lt;/code&gt;等之外，还有其他的很多的不常用的泛型算法，本篇文章就对&lt;code&gt;C++泛型算法&lt;/code&gt;做一个索引列表，以便查询。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="STL" scheme="http://yoursite.com/tags/STL/"/>
    
      <category term="Algorithm" scheme="http://yoursite.com/tags/Algorithm/"/>
    
  </entry>
  
  <entry>
    <title>GNU/Linux压缩解压命令汇总</title>
    <link href="http://yoursite.com/2016/04/19/GNU-Linux%E5%8E%8B%E7%BC%A9%E8%A7%A3%E5%8E%8B%E5%91%BD%E4%BB%A4%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2016/04/19/GNU-Linux压缩解压命令汇总/</id>
    <published>2016-04-19T15:08:44.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;GNU\Linux&lt;/code&gt;下压缩和解压命令比较多，文档汇总了常见的的压缩解压命令，以便作为工具随时查阅。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;tar-gz&quot;&gt;&lt;a href=&quot;#tar-gz&quot; class=&quot;headerlink&quot; title=&quot;.tar.gz&quot;&gt;&lt;/a&gt;.tar.gz&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: gzip&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar zcvf FileName.tar.gz DirName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar zxvf FileName.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;zip&quot;&gt;&lt;a href=&quot;#zip&quot; class=&quot;headerlink&quot; title=&quot;.zip&quot;&gt;&lt;/a&gt;.zip&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: zip&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ zip FileName.zip DirName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ unzip FileName.zip&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;rar&quot;&gt;&lt;a href=&quot;#rar&quot; class=&quot;headerlink&quot; title=&quot;.rar&quot;&gt;&lt;/a&gt;.rar&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: rar unrar&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ rar a FileName.rar DirName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ rar e FileName.rar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ unrar e FileName.rar&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 解压缩到指定目录&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ rar x FileName.rar DirName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tar-bz&quot;&gt;&lt;a href=&quot;#tar-bz&quot; class=&quot;headerlink&quot; title=&quot;.tar.bz&quot;&gt;&lt;/a&gt;.tar.bz&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;解压缩:&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar jxvf FileName.tar.bz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tar-bz2&quot;&gt;&lt;a href=&quot;#tar-bz2&quot; class=&quot;headerlink&quot; title=&quot;.tar.bz2&quot;&gt;&lt;/a&gt;.tar.bz2&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: bzip2&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar jcvf FileName.tar.bz2 DirName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar jxvf FileName.tar.bz2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tar-xz&quot;&gt;&lt;a href=&quot;#tar-xz&quot; class=&quot;headerlink&quot; title=&quot;.tar.xz&quot;&gt;&lt;/a&gt;.tar.xz&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: xz-utils&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar Jcvf FileName.tar.xz DirName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar Jxvf FileName.tar.xz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tgz&quot;&gt;&lt;a href=&quot;#tgz&quot; class=&quot;headerlink&quot; title=&quot;.tgz&quot;&gt;&lt;/a&gt;.tgz&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: gzip&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar zcvf FileName.tgz DirName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar zxvf FileName.tgz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;7z&quot;&gt;&lt;a href=&quot;#7z&quot; class=&quot;headerlink&quot; title=&quot;.7z&quot;&gt;&lt;/a&gt;.7z&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: p7zip-full&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ 7z a FileName.7z FileName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ 7z x FileName.7z&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;bz&quot;&gt;&lt;a href=&quot;#bz&quot; class=&quot;headerlink&quot; title=&quot;.bz&quot;&gt;&lt;/a&gt;.bz&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: bzip2&lt;/li&gt;
&lt;li&gt;解压缩:&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ bzip2 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; FileName.bz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ bunzip2 FileName.bz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;bz2&quot;&gt;&lt;a href=&quot;#bz2&quot; class=&quot;headerlink&quot; title=&quot;.bz2&quot;&gt;&lt;/a&gt;.bz2&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: bzip2&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ bzip2 -z FileName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ bzip2 &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; FileName.bz2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ bunzip2 FileName.bz2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;xz&quot;&gt;&lt;a href=&quot;#xz&quot; class=&quot;headerlink&quot; title=&quot;.xz&quot;&gt;&lt;/a&gt;.xz&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: xz-utils&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ xz -z FileName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ xz &lt;span class=&quot;_&quot;&gt;-d&lt;/span&gt; FileName.xz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;Z&quot;&gt;&lt;a href=&quot;#Z&quot; class=&quot;headerlink&quot; title=&quot;.Z&quot;&gt;&lt;/a&gt;.Z&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: xz-utils&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ compress FileName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ uncompress FileName.Z&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tar-Z&quot;&gt;&lt;a href=&quot;#tar-Z&quot; class=&quot;headerlink&quot; title=&quot;.tar.Z&quot;&gt;&lt;/a&gt;.tar.Z&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar Zcvf FileName.tar.Z DirName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar Zxvf FileName.tar.Z&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;tar-tgz&quot;&gt;&lt;a href=&quot;#tar-tgz&quot; class=&quot;headerlink&quot; title=&quot;.tar.tgz&quot;&gt;&lt;/a&gt;.tar.tgz&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;软件包: gzip&lt;/li&gt;
&lt;li&gt;&lt;p&gt;压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar zcvf FileName.tar.tgz FileName&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解压缩:&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar zxvf FileName.tar.tgz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;GNU\Linux&lt;/code&gt;下压缩和解压命令比较多，文档汇总了常见的的压缩解压命令，以便作为工具随时查阅。&lt;br&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="Tools" scheme="http://yoursite.com/tags/Tools/"/>
    
      <category term="tar.gz" scheme="http://yoursite.com/tags/tar-gz/"/>
    
  </entry>
  
  <entry>
    <title>LXC在CentOS上的安装和使用</title>
    <link href="http://yoursite.com/2016/04/19/LXC/"/>
    <id>http://yoursite.com/2016/04/19/LXC/</id>
    <published>2016-04-18T16:40:04.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;code&gt;Linux Container(LXC)&lt;/code&gt;是Linux系统上的虚拟化技术，用于建立一个&lt;code&gt;Sandbox&lt;/code&gt;，来运行一些不信任的程序。这篇文章是在&lt;code&gt;CentOS&lt;/code&gt;系统上安装和使用&lt;code&gt;Linux Container&lt;/code&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;安装LXC&quot;&gt;&lt;a href=&quot;#安装LXC&quot; class=&quot;headerlink&quot; title=&quot;安装LXC&quot;&gt;&lt;/a&gt;安装LXC&lt;/h2&gt;&lt;p&gt;&lt;code&gt;LXC&lt;/code&gt;在Ubuntu系统中已经集成为一个Packet, 使用&lt;code&gt;sudo apt-get install lxc&lt;/code&gt;就可以安装&lt;code&gt;LXC&lt;/code&gt;, 在CentOS需要从源码手动编译安装。&lt;/p&gt;
&lt;h3 id=&quot;安装依赖包&quot;&gt;&lt;a href=&quot;#安装依赖包&quot; class=&quot;headerlink&quot; title=&quot;安装依赖包&quot;&gt;&lt;/a&gt;安装依赖包&lt;/h3&gt;&lt;p&gt;在安装之前，首先确保系统更新到最新状态。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ yum update&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LXC&lt;/code&gt;依赖于&lt;code&gt;libpcap&lt;/code&gt;和&lt;code&gt;libcgroup&lt;/code&gt;库，同时需要使用&lt;code&gt;busybox&lt;/code&gt;和&lt;code&gt;utilities&lt;/code&gt;工具。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ yum install libcap-devel libcgroup busybox wget bridge-utils&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;LXC&lt;/code&gt;从源码编译安装需要使用&lt;code&gt;GCC&lt;/code&gt;库以及其他工具，一个一个安装比较费时，在&lt;code&gt;yum&lt;/code&gt;中，可以使用安装&lt;code&gt;Development tools&lt;/code&gt; 一次性安装好所有源码编译需要的工具。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ yum groupinstall &lt;span class=&quot;string&quot;&gt;&quot;Development tools&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h3 id=&quot;下载LXC-Container源码&quot;&gt;&lt;a href=&quot;#下载LXC-Container源码&quot; class=&quot;headerlink&quot; title=&quot;下载LXC Container源码&quot;&gt;&lt;/a&gt;下载LXC Container源码&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://linuxcontainers.org/lxc/downloads/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux Container Project&lt;/a&gt; 上有LXC的每个版本的代码，可以根据需求选定特定版本的源码，在这里使用的是&lt;code&gt;version 2.0.0&lt;/code&gt;版本。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ wget http://linuxcontainers.org/downloads/lxc-2.0.0.tar.gz&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;另外一种下载源码的方式是通过&lt;code&gt;git&lt;/code&gt;, 可以将&lt;code&gt;LXC&lt;/code&gt;源码库克隆到本地，然后切换到相应的分支。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ git &lt;span class=&quot;built_in&quot;&gt;clone&lt;/span&gt; git://github.com/lxc/lxc&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ git checkout -b &amp;#123;branch&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;其中&lt;code&gt;{branch}&lt;/code&gt;是需要安装的版本，&lt;code&gt;master&lt;/code&gt;是最新的开发版本，&lt;code&gt;stable-2.0.0&lt;/code&gt;是&lt;code&gt;2.0.0&lt;/code&gt;版本，以此类推。&lt;/p&gt;
&lt;h3 id=&quot;编译安装&quot;&gt;&lt;a href=&quot;#编译安装&quot; class=&quot;headerlink&quot; title=&quot;编译安装&quot;&gt;&lt;/a&gt;编译安装&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ tar xvfz lxc-2.0.0.tar.gz&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ &lt;span class=&quot;built_in&quot;&gt;cd&lt;/span&gt; lxc-2.0.0/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ./configure&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ make &amp;amp;&amp;amp; make install&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;测试是否安装成功&quot;&gt;&lt;a href=&quot;#测试是否安装成功&quot; class=&quot;headerlink&quot; title=&quot;测试是否安装成功&quot;&gt;&lt;/a&gt;测试是否安装成功&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;lxc-info&lt;/code&gt;命令可以测试是否安装成功&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ lxc-info --name &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果正确配置安装成功，那么将会显示如下的结果, 表示test的&lt;code&gt;namespace&lt;/code&gt;没有建立。&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;test doesn&amp;apos;t exist&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;如果没有正确配置，出现&lt;code&gt;liblxc.so.1&lt;/code&gt;找不到的情况，需要手动链接&lt;code&gt;liblxc.so.1&lt;/code&gt;。 其中&lt;code&gt;/usr/local/lib/liblxc.so.1.2.0&lt;/code&gt;是在&lt;code&gt;version 2.0.0&lt;/code&gt;下的库版本, &lt;code&gt;liblxc.so.x.x.x&lt;/code&gt;可能会随着&lt;code&gt;LXC&lt;/code&gt;变化，需要到&lt;code&gt;/usr/local/lib&lt;/code&gt;下确定指定的版本。&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ ln &lt;span class=&quot;_&quot;&gt;-s&lt;/span&gt; /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/lib/liblxc.so.1.2.0 /lib64/liblxc.so.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;$ ls &lt;span class=&quot;_&quot;&gt;-l&lt;/span&gt; /lib64/liblxc.so.1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;lrwxrwxrwx 1 root root 30 4月  18 12:20 /lib64/liblxc.so.1 -&amp;gt; /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/lib/liblxc.so.2.0.0&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;再使用&lt;code&gt;lxc-info&lt;/code&gt;命令进行测试就可以看到&lt;code&gt;LXC&lt;/code&gt;已经正确安装。&lt;/p&gt;
&lt;h3 id=&quot;查看LXC是否正确配置&quot;&gt;&lt;a href=&quot;#查看LXC是否正确配置&quot; class=&quot;headerlink&quot; title=&quot;查看LXC是否正确配置&quot;&gt;&lt;/a&gt;查看LXC是否正确配置&lt;/h3&gt;&lt;p&gt;使用&lt;code&gt;lxc-checkconfig&lt;/code&gt;命令查看&lt;code&gt;LXC&lt;/code&gt;是否已经正确配置。&lt;/p&gt;
&lt;p&gt;该命令会输出4个部分：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Namespaces&lt;/li&gt;
&lt;li&gt;Control Groups&lt;/li&gt;
&lt;li&gt;Misc&lt;/li&gt;
&lt;li&gt;Checkpoint/Restore&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;正确的输出应该如下，四个部分都是&lt;code&gt;enable&lt;/code&gt;状态。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;34&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;35&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;36&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;37&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;38&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;39&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;40&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;41&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;42&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;43&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;44&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;45&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;46&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;Kernel configuration not found at /proc/config.gz; searching...&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Kernel configuration found at /boot/config-3.10.0-327.10.1.el7.x86_64&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--- Namespaces ---&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Namespaces: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Utsname namespace: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Ipc namespace: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Pid namespace: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;User namespace: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Network namespace: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Multiple /dev/pts instances: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--- Control groups ---&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Cgroup: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Cgroup clone_children flag: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Cgroup device: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Cgroup &lt;span class=&quot;built_in&quot;&gt;sched&lt;/span&gt;: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Cgroup cpu account: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Cgroup memory controller: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Cgroup cpuset: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--- Misc ---&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Veth pair device: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Macvlan: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Vlan: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Bridges: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Advanced netfilter: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_NF_NAT_IPV4: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_NF_NAT_IPV6: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_IP_NF_TARGET_MASQUERADE: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_IP6_NF_TARGET_MASQUERADE: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_NETFILTER_XT_TARGET_CHECKSUM: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;FUSE (&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; use with lxcfs): enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;--- Checkpoint/Restore ---&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;checkpoint restore: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_FHANDLE: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_EVENTFD: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_EPOLL: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_UNIX_DIAG: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_INET_DIAG: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_PACKET_DIAG: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;CONFIG_NETLINK_DIAG: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;File capabilities: enabled&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;Note : Before booting a new kernel, you can check its configuration&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;usage : CONFIG=/path/to/config /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;/bin/lxc-checkconfig&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;h2 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://www.thegeekstuff.com/2016/01/install-lxc-linux-containers/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How to Install and Setup LXC Linux Containers on CentOS / RHEL / Ubuntu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://linuxcontainers.org/lxc/getting-started/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux Container Project&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;code&gt;Linux Container(LXC)&lt;/code&gt;是Linux系统上的虚拟化技术，用于建立一个&lt;code&gt;Sandbox&lt;/code&gt;，来运行一些不信任的程序。这篇文章是在&lt;code&gt;CentOS&lt;/code&gt;系统上安装和使用&lt;code&gt;Linux Container&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="技术" scheme="http://yoursite.com/categories/%E6%8A%80%E6%9C%AF/"/>
    
    
      <category term="Linux" scheme="http://yoursite.com/tags/Linux/"/>
    
      <category term="LXC" scheme="http://yoursite.com/tags/LXC/"/>
    
  </entry>
  
  <entry>
    <title>最长上升子序列</title>
    <link href="http://yoursite.com/2016/04/18/%E6%9C%80%E9%95%BF%E4%B8%8A%E5%8D%87%E5%AD%90%E5%BA%8F%E5%88%97/"/>
    <id>http://yoursite.com/2016/04/18/最长上升子序列/</id>
    <published>2016-04-17T17:45:53.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;LIS介绍&quot;&gt;&lt;a href=&quot;#LIS介绍&quot; class=&quot;headerlink&quot; title=&quot;LIS介绍&quot;&gt;&lt;/a&gt;LIS介绍&lt;/h2&gt;&lt;p&gt;最长上升子序列(Longest Increasing Subsequence), 简称&lt;code&gt;LIS&lt;/code&gt;, 是经典的动态规划题目。给定一个序列，例如&lt;code&gt;[10, 9, 2, 5, 3, 7, 101, 18]&lt;/code&gt;,&lt;br&gt;最长的上升子序列为&lt;code&gt;[2, 3, 7, 101]&lt;/code&gt;, 长度为&lt;code&gt;4&lt;/code&gt;。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;问题&lt;/strong&gt;: 给定一个序列&lt;code&gt;a1, a2, a3, ..., an&lt;/code&gt;, 找出其中最长的一个子序列&lt;code&gt;s1, s2, s3, ..., sl&lt;/code&gt;满足&lt;code&gt;s1 &amp;lt; s2 &amp;lt; s3, ... &amp;lt; sl&lt;/code&gt;。&lt;br&gt;&lt;strong&gt;分析&lt;/strong&gt;: 以&lt;code&gt;dp[i]&lt;/code&gt;表示以&lt;code&gt;ai&lt;/code&gt;结尾的最长上升子序列，那么&lt;code&gt;dp[i]&lt;/code&gt;一定是由&lt;code&gt;aj&lt;/code&gt;结尾的子序列加上&lt;code&gt;ai&lt;/code&gt;组成的序列，其中&lt;code&gt;0 &amp;lt;= j &amp;lt; i &amp;amp;&amp;amp; aj &amp;lt; ai&lt;/code&gt;。&lt;br&gt;因此从&lt;code&gt;j&lt;/code&gt;中挑选出最长的子序列，再加上&lt;code&gt;ai&lt;/code&gt;,就是以&lt;code&gt;ai&lt;/code&gt;结尾的最长上升子序列。在计算完所有的&lt;code&gt;dp[i]&lt;/code&gt;之后，从中选出最长的一个上升子序列，就是全局最长的上升子序列。&lt;/p&gt;
&lt;h2 id=&quot;O-n-2-算法&quot;&gt;&lt;a href=&quot;#O-n-2-算法&quot; class=&quot;headerlink&quot; title=&quot;O(n^2)算法&quot;&gt;&lt;/a&gt;O(n^2)算法&lt;/h2&gt;&lt;p&gt;动态规划状态转移方程如下, 时间复杂度为&lt;code&gt;O(n^2)&lt;/code&gt;:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;dp[i] = max(dp[j]+1) while 0 &amp;lt;= j &amp;lt; i and nums[i] &amp;gt; nums[j]&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;code&gt;C++&lt;/code&gt;示例代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/*&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* O(n^2)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* dp[i] represents the length of LIS ending with nums[i]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;* dp[i] = max(dp[j]+1) while 0 &amp;lt;= j &amp;lt; i and nums[i] &amp;gt; nums[j]&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;*/&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;lengthOfLIS&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt; dp(nums.size(), &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; i &amp;lt; dp.size(); i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; i; j++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[j] &amp;lt; nums[i] &amp;amp;&amp;amp; dp[i] &amp;lt; dp[j]+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                dp[i] = dp[j] + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; res = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; dp.size(); i++) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (res &amp;lt; dp[i]) res = dp[i];&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; res;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;O-nlogn-算法&quot;&gt;&lt;a href=&quot;#O-nlogn-算法&quot; class=&quot;headerlink&quot; title=&quot;O(nlogn)算法&quot;&gt;&lt;/a&gt;O(nlogn)算法&lt;/h2&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;LIS介绍&quot;&gt;&lt;a href=&quot;#LIS介绍&quot; class=&quot;headerlink&quot; title=&quot;LIS介绍&quot;&gt;&lt;/a&gt;LIS介绍&lt;/h2&gt;&lt;p&gt;最长上升子序列(Longest Increasing Subsequence), 简称&lt;code&gt;LIS&lt;/code&gt;, 是经典的动态规划题目。给定一个序列，例如&lt;code&gt;[10, 9, 2, 5, 3, 7, 101, 18]&lt;/code&gt;,&lt;br&gt;最长的上升子序列为&lt;code&gt;[2, 3, 7, 101]&lt;/code&gt;, 长度为&lt;code&gt;4&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="DP" scheme="http://yoursite.com/tags/DP/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-33题和81题</title>
    <link href="http://yoursite.com/2016/04/18/LeetCode-33%E9%A2%98%E5%92%8C81%E9%A2%98/"/>
    <id>http://yoursite.com/2016/04/18/LeetCode-33题和81题/</id>
    <published>2016-04-17T17:42:23.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;二分查找的灵活运用，对排序数组某一部分进行翻转，然后使用二分查找算法继续以&lt;code&gt;log(N)&lt;/code&gt;时间查找元素。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;33&lt;/strong&gt;: &lt;a href=&quot;https://leetcode.com/problems/search-in-rotated-sorted-array/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Search in Rotated Sorted Array&lt;/a&gt;&lt;br&gt;&lt;strong&gt;81&lt;/strong&gt;: &lt;a href=&quot;https://leetcode.com/problems/search-in-rotated-sorted-array-ii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Search in Rotated Sorted Array II&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Search in Rotated Sorted Array&lt;/code&gt;的题目意思如下:&lt;/p&gt;
&lt;p&gt;Suppose a sorted array is rotated at some pivot unknown to you beforehand.&lt;/p&gt;
&lt;p&gt;(i.e., &lt;code&gt;0 1 2 4 5 6 7&lt;/code&gt; might become &lt;code&gt;4 5 6 7 0 1 2&lt;/code&gt;).&lt;/p&gt;
&lt;p&gt;You are given a target value to search. If found in the array return its index, otherwise return &lt;code&gt;-1&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;81&lt;/strong&gt;和&lt;strong&gt;33&lt;/strong&gt;的唯一区别是序列中可能有重复元素。&lt;/p&gt;
&lt;h2 id=&quot;Search-in-Rotated-Sorted-Array&quot;&gt;&lt;a href=&quot;#Search-in-Rotated-Sorted-Array&quot; class=&quot;headerlink&quot; title=&quot;Search in Rotated Sorted Array&quot;&gt;&lt;/a&gt;Search in Rotated Sorted Array&lt;/h2&gt;&lt;p&gt;这个题目我首先想到的是在LeetCode上有一个与此相关的题目，题号具体记不清楚了，也是排好序的数组在某个地方发生了翻转，然后恢复回来原来的顺序。其实一种笨拙的方法就是先翻转回原来的数组，然后使用&lt;code&gt;binary search&lt;/code&gt;进行搜索。&lt;/p&gt;
&lt;p&gt;可以这样分析这个题目，在某个地方经过翻转之后的数组，在数组的任何一个位置上，其左右两边一定有一边是有序的。&lt;br&gt;比如在&lt;code&gt;0 1 2 4 5 6 7&lt;/code&gt;这个数组中，不论从哪个地方看，两边必定有一边是有序的，传统的二分查找算法，不也是基于这个基础么? 二分查找的过程其实就是不断扔掉&lt;code&gt;target&lt;/code&gt;不可能在的一边的过程，判断&lt;code&gt;target&lt;/code&gt;不可能在这一边的基础就是至少有一边是有序的。&lt;/p&gt;
&lt;p&gt;思路如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;如果&lt;code&gt;nums[mid]&lt;/code&gt;等于是&lt;code&gt;target&lt;/code&gt;, 那么返回&lt;code&gt;mid&lt;/code&gt;即可；&lt;/li&gt;
&lt;li&gt;如果&lt;code&gt;nums[l] &amp;lt; nums[mid]&lt;/code&gt;, 那么就认为&lt;code&gt;l - mid&lt;/code&gt;区间是有序的，如果&lt;code&gt;nums[l] &amp;lt;= target &amp;lt;= nums[mid]&lt;/code&gt;,则到左边查找；反之，则到右边查找。&lt;/li&gt;
&lt;li&gt;如果&lt;code&gt;nums[l] &amp;gt;= nums[mid]&lt;/code&gt;, 那么就认为&lt;code&gt;mid+1 - r&lt;/code&gt;区间是有序的，如果&lt;code&gt;nums[mid+1] &amp;lt;= target &amp;lt;= nums[r]&lt;/code&gt;,则到右边查找；反之，则到左边查找。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;需要特别注意的一点&lt;/strong&gt;: 在第三种情况中为什么事&lt;code&gt;mid+1&lt;/code&gt;, 当&lt;code&gt;l = r-1&lt;/code&gt;这种情况出现时, 此时&lt;code&gt;mid = l&lt;/code&gt;。那么就是&lt;code&gt;mid+1 - r&lt;/code&gt;区间是有序的, &lt;code&gt;mid - r&lt;/code&gt;即&lt;code&gt;l - r&lt;/code&gt;区间不一定有序。而这种情况不出现时, 由于之前已经判断了&lt;code&gt;nums[mid] != target&lt;/code&gt;, 所以使用&lt;code&gt;nums[mid+1]&lt;/code&gt;判断并不会有影响。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;C++&lt;/code&gt;示例代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, r = nums.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, mid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (l &amp;lt;= r) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mid = (r-l)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + l;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(nums[mid] == target) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; mid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[l] &amp;lt; nums[mid]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[l] &amp;lt;= target &amp;amp;&amp;amp; target &amp;lt;= nums[mid]) r = mid - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; l = mid + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[mid+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;lt;= target &amp;amp;&amp;amp; target &amp;lt;= nums[r]) l = mid + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; r = mid - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Search-in-Rotated-Sorted-Array-II&quot;&gt;&lt;a href=&quot;#Search-in-Rotated-Sorted-Array-II&quot; class=&quot;headerlink&quot; title=&quot;Search in Rotated Sorted Array II&quot;&gt;&lt;/a&gt;Search in Rotated Sorted Array II&lt;/h2&gt;&lt;p&gt;与&lt;code&gt;Search in Rotated Sorted Array&lt;/code&gt;相比较，II中只多了一个限制，就是元素有重复。那元素有重复会有什么影响呢？&lt;br&gt;举个例子来说，在&lt;code&gt;1,3,1,1,1&lt;/code&gt;这个数组中，第一次二分查找的&lt;code&gt;mid=2&lt;/code&gt;,&lt;code&gt;nums[mid]=1&lt;/code&gt;, 此时会有&lt;code&gt;nums[l] = nums[mid]&lt;/code&gt;。在这个例子中, &lt;code&gt;nums[l] = nums[mid]&lt;/code&gt;并不能证明&lt;code&gt;l - mid&lt;/code&gt;是有序的，因为中间有&lt;code&gt;3&lt;/code&gt;存在，原来数组开始的&lt;code&gt;1&lt;/code&gt;环回了，就无法判断此时左边是不是有序的，也不能确定&lt;code&gt;target&lt;/code&gt;是不是在&lt;code&gt;l - mid&lt;/code&gt;之间。&lt;/p&gt;
&lt;p&gt;此时可以确定的是&lt;code&gt;nums[l] = nums[mid] != nums[r]&lt;/code&gt;, 所以&lt;code&gt;nums[l]&lt;/code&gt;一定不是要找的位置，此时可以将&lt;code&gt;l++&lt;/code&gt;, 使得查找区域缩小一个。因此在最坏的情况下，算法的时间复杂度是&lt;code&gt;O(N)&lt;/code&gt;. 另外，在这个例子中&lt;code&gt;nums[l] = nums[mid] = nums[r]&lt;/code&gt;, 但是却无法判断哪一边是有序的。所在这个题目中，&lt;code&gt;nums[l] = nums[mid]&lt;/code&gt;的情况需要特殊处理。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;search&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt;&amp;gt;&amp;amp; nums, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; l = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, r = nums.size() - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, mid;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (l &amp;lt;= r) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            mid = (r-l)/&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; + l;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(nums[mid] == target) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[l] &amp;lt; nums[mid]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[l] &amp;lt;= target &amp;amp;&amp;amp; target &amp;lt;= nums[mid]) r = mid - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; l = mid + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[l] == nums[mid]) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                l++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (nums[mid+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] &amp;lt;= target &amp;amp;&amp;amp; target &amp;lt;= nums[r]) l = mid + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; r = mid - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;二分查找的灵活运用，对排序数组某一部分进行翻转，然后使用二分查找算法继续以&lt;code&gt;log(N)&lt;/code&gt;时间查找元素。&lt;br&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
      <category term="Binary Search" scheme="http://yoursite.com/tags/Binary-Search/"/>
    
  </entry>
  
  <entry>
    <title>LeetCode-116的三种解法</title>
    <link href="http://yoursite.com/2016/04/18/LeetCode-116%E7%9A%84%E4%B8%89%E7%A7%8D%E8%A7%A3%E6%B3%95/"/>
    <id>http://yoursite.com/2016/04/18/LeetCode-116的三种解法/</id>
    <published>2016-04-17T16:51:43.000Z</published>
    <updated>2016-09-19T15:47:37.000Z</updated>
    
    <content type="html">&lt;p&gt;LeetCode 116二叉树next指针变换的题目，采用了BFS, Recursion Version和NO-Recursion Version三种方式实现。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;Question&quot;&gt;&lt;a href=&quot;#Question&quot; class=&quot;headerlink&quot; title=&quot;Question&quot;&gt;&lt;/a&gt;Question&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://leetcode.com/problems/populating-next-right-pointers-in-each-node/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Populating Next Right Pointers in Each Node&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Given a binary tree&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;struct&lt;/span&gt; TreeLinkNode &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  TreeLinkNode *left;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  TreeLinkNode *right;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  TreeLinkNode *next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Initially, all next pointers are set to &lt;code&gt;NULL&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Note:&lt;/p&gt;
&lt;p&gt;You may only use constant extra space.&lt;br&gt;You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).&lt;br&gt;For example,&lt;br&gt;Given the following perfect binary tree,&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   /  \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;    &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; / \  / \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;  &lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;After calling your function, the tree should look like:&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; -&amp;gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;   /  \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;  &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt; -&amp;gt; &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt; -&amp;gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; / \  / \&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;-&amp;gt;&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;-&amp;gt;&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;-&amp;gt;&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt; -&amp;gt; &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h2 id=&quot;Solutions&quot;&gt;&lt;a href=&quot;#Solutions&quot; class=&quot;headerlink&quot; title=&quot;Solutions&quot;&gt;&lt;/a&gt;Solutions&lt;/h2&gt;&lt;h3 id=&quot;BFS&quot;&gt;&lt;a href=&quot;#BFS&quot; class=&quot;headerlink&quot; title=&quot;BFS&quot;&gt;&lt;/a&gt;BFS&lt;/h3&gt;&lt;p&gt;看到这道题，我首先想到的竟然是&lt;code&gt;BFS&lt;/code&gt;，而不是&lt;code&gt;递归&lt;/code&gt;…….显然，在树中需要赋值的每一层节点就是&lt;code&gt;queue&lt;/code&gt;里面连续的一段元素，前一个元素的&lt;code&gt;next&lt;/code&gt;指针指向后一个元素，每层的最后一个元素指向&lt;code&gt;NULL&lt;/code&gt;.这个题目中，给定的&lt;code&gt;tree&lt;/code&gt;是满二叉树，所以直接使用计数器来判断队列里面的元素是否是每层的最后一个元素。每层的最后一个元素计数器值分别为&lt;code&gt;1&lt;/code&gt;,&lt;code&gt;3&lt;/code&gt;,&lt;code&gt;7&lt;/code&gt;……,即&lt;code&gt;sum(2^i)&lt;/code&gt;, 其中&lt;code&gt;0 &amp;lt;= i &amp;lt; h&lt;/code&gt;。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;26&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;27&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;28&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;29&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;30&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;31&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;32&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;33&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Definition for binary tree with next pointer.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * struct TreeLinkNode &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  int val;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  TreeLinkNode *left, *right, *next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;/* BFS Version */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TreeLinkNode *root)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (root == &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; cnt = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, num = &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;, level = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;built_in&quot;&gt;queue&lt;/span&gt;&amp;lt;TreeLinkNode*&amp;gt; q;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        q.push(root);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt; (!q.empty()) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            TreeLinkNode* cur = q.front();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            q.pop();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            cnt++;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(cnt &amp;lt; num) cur-&amp;gt;next = q.front();&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                cur-&amp;gt;next = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                num += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; (++level);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cur-&amp;gt;left != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) q.push(cur-&amp;gt;left);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cur-&amp;gt;right != &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;) q.push(cur-&amp;gt;right);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;Recursion-Version&quot;&gt;&lt;a href=&quot;#Recursion-Version&quot; class=&quot;headerlink&quot; title=&quot;Recursion Version&quot;&gt;&lt;/a&gt;Recursion Version&lt;/h3&gt;&lt;p&gt;当然，这道题最简单的思路还是使用递归，对于某个节点，先把左孩子的&lt;code&gt;next&lt;/code&gt;指针指向右孩子，然后再处理右孩子的&lt;code&gt;next&lt;/code&gt;指针。右孩子有两种情况，一种是右孩子位于最右边了,比如&lt;code&gt;3&lt;/code&gt;节点，那么设置&lt;code&gt;next&lt;/code&gt;指针为&lt;code&gt;NULL&lt;/code&gt;即可；另外一种是不在最右边，比如&lt;code&gt;5&lt;/code&gt;节点, 那么就将&lt;code&gt;next&lt;/code&gt;指针指向父节点&lt;code&gt;next&lt;/code&gt;节点的左孩子，也就是图中的&lt;code&gt;6&lt;/code&gt;. 使用code表示就是&lt;code&gt;root-&amp;gt;right-&amp;gt;next = root-&amp;gt;next-&amp;gt;left&lt;/code&gt;.&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;25&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Definition for binary tree with next pointer.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * struct TreeLinkNode &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  int val;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  TreeLinkNode *left, *right, *next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;     &lt;span class=&quot;comment&quot;&gt;/* Recursion Version */&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TreeLinkNode *root)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!root || !root-&amp;gt;left || !root-&amp;gt;right)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        root-&amp;gt;left-&amp;gt;next = root-&amp;gt;right;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (root-&amp;gt;next)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            root-&amp;gt;right-&amp;gt;next = root-&amp;gt;next-&amp;gt;left;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            root-&amp;gt;right-&amp;gt;next = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        connect(root-&amp;gt;left);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;        connect(root-&amp;gt;right);&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;NO-Recursion-Version&quot;&gt;&lt;a href=&quot;#NO-Recursion-Version&quot; class=&quot;headerlink&quot; title=&quot;NO-Recursion Version&quot;&gt;&lt;/a&gt;NO-Recursion Version&lt;/h3&gt;&lt;p&gt;该问题还可以使用非递归的方式解决，递归是通过调用&lt;code&gt;connect&lt;/code&gt;函数一层一层往下计算, 那非递归就可以使用&lt;code&gt;for&lt;/code&gt;循环向下延伸，直到最底层。每层的任务就是将下一层节点通过&lt;code&gt;next&lt;/code&gt;指针连接起来。连接的思路和递归是相同的，都是先把左孩子的&lt;code&gt;next&lt;/code&gt;指针指向右孩子，然后再处理右孩子的&lt;code&gt;next&lt;/code&gt;指针。&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;3&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;4&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;5&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;6&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;7&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;8&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;9&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;10&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;11&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;12&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;13&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;14&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;15&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;16&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;17&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;18&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;19&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;20&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;21&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;22&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;23&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;24&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/**&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * Definition for binary tree with next pointer.&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * struct TreeLinkNode &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  int val;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  TreeLinkNode *left, *right, *next;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; *  TreeLinkNode(int x) : val(x), left(NULL), right(NULL), next(NULL) &amp;#123;&amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; * &amp;#125;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; */&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; Solution &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt;:&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;connect&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(TreeLinkNode *root)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (TreeLinkNode* cur = root; cur; cur = cur-&amp;gt;left) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (TreeLinkNode* next = cur; next; next = next-&amp;gt;next) &amp;#123;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!next-&amp;gt;left) &lt;span class=&quot;keyword&quot;&gt;break&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                next-&amp;gt;left-&amp;gt;next = next-&amp;gt;right;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (!next-&amp;gt;next)&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    next-&amp;gt;right-&amp;gt;next = &lt;span class=&quot;literal&quot;&gt;NULL&lt;/span&gt;;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;                    next-&amp;gt;righ   st-&amp;gt;next = next-&amp;gt;next-&amp;gt;left;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;            &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;       &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;    &amp;#125;&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;&amp;#125;;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;LeetCode 116二叉树next指针变换的题目，采用了BFS, Recursion Version和NO-Recursion Version三种方式实现。&lt;/p&gt;
    
    </summary>
    
      <category term="算法" scheme="http://yoursite.com/categories/%E7%AE%97%E6%B3%95/"/>
    
    
      <category term="C++" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="递归" scheme="http://yoursite.com/tags/%E9%80%92%E5%BD%92/"/>
    
      <category term="面试" scheme="http://yoursite.com/tags/%E9%9D%A2%E8%AF%95/"/>
    
  </entry>
  
</feed>
